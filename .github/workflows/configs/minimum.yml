---
# yaml-language-server: $schema=config.schema.json
# name of the cluster
project_name: az-hop

location: __LOCATION__
resource_group: __RESOURCE_GROUP__
use_existing_rg: false
# If set to true, will disable telemetry for azhop. See https://azure.github.io/az-hop/deploy/telemetry.html.
#optout_telemetry: true

tags:
  env: dev
  project: azhop
  scheduler: __SCHEDULER__

# Define an ANF account, single pool and volume
# If not present assume that there is an existing NFS share for the users home directory
anf:
  create: __CREATE_ANF__
  # Size of the ANF pool and unique volume
  homefs_size_tb: 4
  # Service level of the ANF volume, can be: Standard, Premium, Ultra
  homefs_service_level: Standard

# For small deployments you can use Azure Files instead of ANF for the home directory
azurefiles:
  create: __CREATE_AZUREFILES__
  size_gb: 1024

mounts:
  # mount settings for the user home directory
  home:
    type: __HOME_TYPE__ # anf or azurefiles, default to anf. One of the two should be defined in order to mount the home directory
    mountpoint: /anfhome # /sharedhome for example
    server: '{{anf_home_ip}}' # Specify an existing NFS server name or IP, when using the ANF built in use '{{anf_home_ip}}'
    export: '{{anf_home_path}}' # Specify an existing NFS export directory, when using the ANF built in use '{{anf_home_path}}'
    options: '{{anf_home_opts}}'

admin_user: hpcadmin
key_vault_readers: 0bf2513b-59fe-4018-bfd6-5d4844a9a3b9

network:
  vnet:
    name: hpcvnet # Optional - default to hpcvnet
    address_space: "10.128.0.0/23" # Optional - default to "10.0.0.0/16"
    subnets:
      frontend: 
        address_prefixes: "10.128.0.0/29"
      ad:
        address_prefixes: "10.128.0.8/29"
      admin:
        address_prefixes: "10.128.0.16/28"
      netapp:
        address_prefixes: "10.128.0.32/28"
      compute:
        address_prefixes: "10.128.1.0/24"
  peering: # This list is optional, and can be used to create VNet Peerings in the same subscription.
    - vnet_name: "azhop_hub" #"VNET Name to Peer to"
      vnet_resource_group: "azhop_control_plane_westeurope" #"Resource Group of the VNET to peer to"

# When working in a locked down network, uncomment and fill out this section
locked_down_network:
  public_ip: false # Enable public IP creation for Jumpbox, OnDemand and create images. Default to true

# Base image configuration. Can be either an image reference or an image_id from the image registry or a custom managed image
linux_base_image: "OpenLogic:CentOS:7_9-gen2:latest" # publisher:offer:sku:version or image_id
windows_base_image: "MicrosoftWindowsServer:WindowsServer:2019-Datacenter-smalldisk:latest" # publisher:offer:sku:version or image_id

jumpbox:
  vm_size: Standard_B2ms
  ssh_port: 8822 # SSH port used on the public IP, default to 22
ad:
  vm_size: Standard_B2ms
ondemand:
  vm_size: Standard_D4ls_v5
grafana:
  vm_size: Standard_B2ms
scheduler:
  vm_size: Standard_B2ms
cyclecloud:
  vm_size: Standard_B2ms

users:
  - { name: hpcuser, uid: 10001 }
  - { name: adminuser, uid: 10002, groups: [5001, 5002] }
  - { name: john.john, uid: 10003 }

usergroups:
  - name: azhop-users # All users will be added to this one by default
    gid: 5000
  - name: azhop-admins # For users with azhop admin privilege
    gid: 5001
    description: "For users with azhop admin privileges"
  - name: azhop-localadmins # For users with sudo right on nodes
    gid: 5002
    description: "For users with sudo right or local admin right on nodes"

# scheduler to be installed and configured
queue_manager: __SCHEDULER__

# Specific SLURM configuration
slurm:
  # Enable SLURM accounting, this will create a SLURM accounting database in a managed MySQL server instance
  accounting_enabled: false
  # SLURM version to install. Currently supported: only 20.11.9 and 22.05.3.
  # Other versions can be installed by building from source (See build_rpms setting in the slurmserver role)
  slurm_version: 20.11.9

queues:
  - name: execute
    vm_size: Standard_F2s_v2
    max_core_count: 512
    image: azhpc:azhop-compute:centos-7_9:latest
    ColocateNodes: false
  - name: hb120v3
    vm_size: Standard_HB120rs_v3
    max_core_count: 1200
    image: azhpc:azhop-compute:centos-7_9:latest
    ColocateNodes: true
    EnableAcceleratedNetworking: true
  - name: hbv3al
    vm_size: Standard_HB120rs_v3
    max_core_count: 1200
    image: azhpc:azhop-compute:almalinux-8_7:latest
    __ALMA8_PLAN__
    ColocateNodes: true
    EnableAcceleratedNetworking: true
  - name: hbv3u18
    vm_size: Standard_HB120rs_v3
    max_core_count: 1200
    image: azhpc:azhop-compute:ubuntu-18_04:latest
    ColocateNodes: true
    EnableAcceleratedNetworking: true
  - name: hbv3u20
    vm_size: Standard_HB120rs_v3
    max_core_count: 1200
    image: azhpc:azhop-compute:ubuntu-20_04:latest
    ColocateNodes: true
    EnableAcceleratedNetworking: true

# Remote Viz Queues
  - name: viz3d
    vm_size: Standard_NV12s_v3
    max_core_count: 48
    image: azhpc:azhop-desktop:centos-7_9:latest
    ColocateNodes: false
    EnableAcceleratedNetworking: true
  - name: viz
    vm_size: Standard_D8s_v5
    max_core_count: 200
    image: azhpc:azhop-desktop:centos-7_9:latest
    ColocateNodes: false
    EnableAcceleratedNetworking: true
  - name: largeviz3d
    vm_size: Standard_NV48s_v3
    max_core_count: 96
    image: azhpc:azhop-desktop:centos-7_9:latest
    ColocateNodes: false
    EnableAcceleratedNetworking: true

# Application settings
applications:
  bc_codeserver:
    enabled: true
  bc_jupyter:
    enabled: true
