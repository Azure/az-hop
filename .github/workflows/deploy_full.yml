#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#
name : deploy_full

on:
  workflow_dispatch:
    inputs:
      azhop_configuration:
        description: 'az-hop configuration to use. The pipeline will load the $azhop_configuration.yml file.'
        required: false
        default: 'integration' # use it with ${{ github.event.inputs.configuration }}
  # push:
  #   branches:
  #     - main
  #   paths:
  #     - .devcontainer
  #     - 'packer/**'
  #     - 'tf/**'
  #     - 'playbooks/**'
  #     - build.sh
  #     - install.sh
  #     - '!**.md'

env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-auto-approve -refresh=false'
  TF_CLI_ARGS_apply: '-auto-approve'
  AZHOP_CONFIGURATION: '.github/workflows/configs/${{ github.event.inputs.azhop_configuration }}.yml'
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AZHOP_STATE_CONTAINER: environments
  AZHOP_STATE_ACCOUNT: ${{ secrets.STATE_ACCOUNT }}
  JETPACK_RPM: "${{ secrets.JETPACK_RPM }}"
  CYCLECLOUD_RPM: "${{ secrets.CYCLECLOUD_RPM }}"
  ANSIBLE_VERBOSITY: 2 # From 0 to 4 based on the level of logs needed in Ansible

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest

    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    outputs:
        resource_group: ${{ steps.deploy.outputs.resource_group }}

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}
          echo "local user: $(whoami)"

      - name: Deployment
        id: deploy
        run: |
          set -e
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}

          ls -al 
          # Set CYCLE RPMs
          echo "JETPACK_RPM=${{ env.JETPACK_RPM }}"
          echo "CYCLECLOUD_RPM=${{ env.CYCLECLOUD_RPM }}"
          echo "Updating config file with Cycle RPMs"
          sed -i 's#__JETPACK_RPM__#${{ env.JETPACK_RPM }}#g;s#__CYCLECLOUD_RPM__#${{ env.CYCLECLOUD_RPM }}#g' config.yml

          cat config.yml

          set +e
          build_error=0
          ./build.sh -a apply -f ./tf
          build_error=$?
          ./azhop_state.sh upload ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          set -e
          ./create_passwords.sh
          exit $build_error

  configure:
    name: configure
    runs-on: ubuntu-latest
    needs: deploy

    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true
         
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Install applications
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          ./install.sh

  build_image:
    name: build_image
    runs-on: ubuntu-latest
    needs: deploy
    strategy: 
      matrix:
        packer_file: ["centos-7.8-desktop-3d.json", "azhop-centos79-v2-rdma-gpgpu.json"]
    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true
         
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Build Images
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          cd packer
          ./build_image.sh -i ${{matrix.packer_file}}

  set_image:
    name: set_image
    runs-on: ubuntu-latest
    needs: [configure, build_image]
    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Update Cycle to use the latest images
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          ./install.sh ccpbs

  run_tests:
    name: run_tests
    runs-on: ubuntu-latest
    needs: [set_image]
    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2.3.4
        with:
          submodules: true
         
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Run test playbook
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          ansible-playbook -v -i playbooks/inventory ./playbooks/tests.yml 
