#
# Copyright (c) Microsoft Corporation
# Licensed under the MIT License.
#

name : integration

on:
  workflow_dispatch: 
  push:
    branches:
      - main
    paths:
      - .devcontainer
      - 'packer/**'
      - 'tf/**'
      - 'playbooks/**'
      - build.sh
      - install.sh
      - '!**.md'


env:
  TF_CLI_ARGS: '-no-color'
  TF_CLI_ARGS_destroy: '-auto-approve -refresh=false'
  TF_CLI_ARGS_apply: '-auto-approve'
  AZHOP_CONFIGURATION: '.github/workflows/configs/integration.yml'
  ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
  ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
  ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
  ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
  AZHOP_STATE_CONTAINER: environments
  AZHOP_STATE_ACCOUNT: ${{ secrets.STATE_ACCOUNT }}

jobs:
  deploy:
    name: deploy
    runs-on: ubuntu-latest

    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    outputs:
        resource_group: ${{ steps.deploy.outputs.resource_group }}

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}
          echo "local user: $(whoami)"

      - name: Deployment
        id: deploy
        run: |
          set -e
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}

          ./build.sh -a apply -f ./tf
          ./create_passwords.sh

          ./azhop_state.sh upload ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}


  configure:
    name: configure
    runs-on: ubuntu-latest
    needs: deploy

    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
         
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Install applications
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          ./install.sh

  build_image:
    name: build_image
    runs-on: ubuntu-latest
    needs: deploy
    strategy: 
      matrix:
        packer_file: ["azhop-centos78-v2-rdma", "centos-7.7-desktop-3d.json"]
    container:
      image: xpillons/hpcrover:latest
      options: --user 0

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
         
      - name: Login azure
        run: |
          az login --service-principal -u '${{ env.ARM_CLIENT_ID }}' -p '${{ env.ARM_CLIENT_SECRET }}' --tenant '${{ env.ARM_TENANT_ID }}'
          az account set -s  ${{ env.ARM_SUBSCRIPTION_ID }}

      - name: Build Images
        run: |
          cp $AZHOP_CONFIGURATION config.yml
          ./azhop_state.sh download ${{ env.AZHOP_STATE_ACCOUNT }} ${{ env.AZHOP_STATE_CONTAINER }}
          cd packer
          ./build_image.sh -i ${{matrix.packer_file}}
