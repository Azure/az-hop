# This looks crazy but in order for this playbook to run from a pipeline, the jumpbox dummy need to be added, otherwise there is an unable to connect message
- name: jumpbox dummy
  hosts: jumpbox
  become: true

- hosts: lustre
  become: false
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Install MDS
    include_role:
      name: lustre
    vars:
      install_mds: true
      install_oss: false
      install_robinhood: false

- hosts: lustre-oss-*
  become: false
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Install OSS
    include_role:
      name: lustre
    vars:
      install_mds: false
      install_oss: true
      install_robinhood: false

- hosts: robinhood
  become: false
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Install Robinhood
    include_role:
      name: lustre
    vars:
      install_mds: false
      install_oss: false
      install_robinhood: true


- hosts: lustre, lustre-oss*, robinhood
  become: true
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Read Password from KV
    command: az keyvault secret show --vault-name {{key_vault}} -n {{admin_user}}-password --query "value" -o tsv
    delegate_to: localhost
    connection: local
    register: password
    become: false
    run_once: true

  - name: Install Telegraf
    include_role:
      name: telegraf
    vars:
      influxdb_username: "{{admin_user}}"
      influxdb_password: "{{password.stdout}}"
      influxdb_database_name: "telegraf"
      telegraf_influxdb_urls: 
        - "http://grafana:8086"

  - name: Configure chrony
    include_role:
      name: chrony


- name: Robinhood metrics
  hosts: robinhood
  become: true
  vars_files:
    - '{{global_config_file}}'
  
  tasks:
  - name: create telegraf plugin directory
    file:
      path: /opt/telegraf/scripts
      state: directory

  - name: create rbh_metrics script
    copy:
      dest: /opt/telegraf/scripts/rbh_metrics.sh
      mode: 0755
      content: |
        #!/bin/bash
        while IFS= read -r LINE; do
            timestamp=$(date +%s%N)
            rbh-report -u "*" -c 2>/dev/null \
                | tail -n +2 \
                | head -n -2 \
                | sed 's/ *//g' \
                | awk -F, '{ print "lustre,user="$1",type="$2" count="$3",volume="$4",space_used="$5" " '$timestamp' }'
            rbh-report --status-info lhsm -c 2>/dev/null \
                | tail -n +2 \
                | head -n -2 \
                | sed 's/ *//g;s/^,/none,/g' \
                | awk -F, '{ print "lhsm,status="$1",type="$2" count="$3",volume="$4",space_used="$5" " '$timestamp' }'
        done
  - name: permissions for rbh lustre.conf
    file:
      path: /etc/robinhood.d/lustre.conf
      group: telegraf
      mode: '0640'

  - name: permissions for rbh .dbpassword
    file:
      path: /etc/robinhood.d/.dbpassword
      group: telegraf
      mode: '0640'

  - name: add rbh metrics to telegraf config
    blockinfile:
      path: /etc/telegraf/telegraf.conf
      block: |
        [[inputs.execd]]
          command = ["/opt/telegraf/scripts/rbh_metrics.sh"]
          signal = "STDIN"

  - name: restart telegraf
    service:
      name: telegraf
      state: restarted
