# This looks crazy but in order for this playbook to run from a pipeline, the jumpbox dummy need to be added, otherwise there is an unable to connect message
- name: jumpbox dummy
  hosts: jumpbox
  become: true

- hosts: grafana
  become: true
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: Read Password from KV
    command: az keyvault secret show --vault-name {{key_vault}} -n {{admin_user}}-password --query "value" -o tsv
    delegate_to: localhost
    connection: local
    register: password
    become: false

  - name: Install InfluxDB
    include_role:
      name: influxdb
    vars:
      influxdb_username: "{{admin_user}}"
      influxdb_password: "{{password.stdout}}"
      influxdb_database_name: "telegraf"

  - name: Install Grafana
    include_role:
      name: grafana
    vars:
      grafana_fqdn: localhost
      grafana_admin_user: "{{None if ((authentication.httpd_auth is defined) and (authentication.httpd_auth == 'oidc')) else admin_user}}"
      grafana_admin_password: "{{None if ((authentication.httpd_auth is defined) and (authentication.httpd_auth == 'oidc')) else password.stdout}}"
      grafana_ldap_server: "{{None if ((authentication.httpd_auth is defined) and (authentication.httpd_auth == 'oidc')) else ldap_server}}"
      grafana_server_root_url: "%(protocol)s://%(domain)s:%(http_port)s/rnode/grafana/%(http_port)s/"
      grafana_anonymous_auth: "{{true if ((authentication.httpd_auth is defined) and (authentication.httpd_auth == 'oidc')) else false}}"
      grafana_auth_ldap_enabled: "{{false if ((authentication.httpd_auth is defined) and (authentication.httpd_auth == 'oidc')) else true}}"
      grafana_public_facing_domain_name: localhost
      grafana_datasources: # https://grafana.com/docs/grafana/latest/administration/provisioning/#data-sources
        - name: "azhpc"
          type: "influxdb"
          access: "proxy"
          database: "telegraf"
          user: "{{admin_user}}"
          password: "{{password.stdout}}"
          url: http://localhost:8086
          jsonData:
            httpMode: GET
      grafana_dashboards: # https://grafana.com/docs/grafana/latest/administration/provisioning/#dashboards
        - name: azhpc
          type: file
          disableDeletion: false
          updateIntervalSeconds: 30
          editable: true
          allowUiUpdates: true
          options:
            path: /etc/grafana/provisioning/dashboards
            foldersFromFilesStructure: true

