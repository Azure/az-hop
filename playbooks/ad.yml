---
- name: prep socks tunnel
  hosts: localhost
  connection: local
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

- name: Configure AD Server
  hosts: ad
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Configure and handle errors
    block:
      - name: Read Password from KV
        command: az keyvault secret show --vault-name {{key_vault}} -n {{admin_user}}-password --query "value" -o tsv
        delegate_to: localhost
        connection: local
        register: ad_join_password

      - name: cleanup any remaining socks tunnel
        shell: ps aux | grep localhost:5985 | grep -v grep | awk '{print "kill -9 " $2}' | sh
        delegate_to: localhost
        connection: local
        ignore_errors: true
        when: (jumpbox is defined)

      - name: start socks tunnel
        shell: ssh -i {{ lookup('env', 'PWD') }}/{{ansible_ssh_private_key_file}} -fN -D localhost:5985 -p {{jumpbox_ssh_port}} -o StrictHostKeyChecking=no {{admin_user}}@{{ psrp_ssh_proxy }}
        delegate_to: localhost
        connection: local
        when: (jumpbox is defined)

      - name: Wait 300 seconds for the nodes to be ready
        wait_for_connection:
          timeout: 300
      - name: Gather facts for first time
        setup:

      - name: Run command to mitigate AD vulnerability 
        win_command: netsh int ipv4 set global sourceroutingbehavior=drop 

      - name: Set lookup addresses on all visible adapters on Azure DNS
        ansible.windows.win_dns_client:
          adapter_names: '*'
          dns_servers:
          - 168.63.129.16

      - name: Install AD-Domain-Services
        win_feature:
          name: AD-Domain-Services
          include_management_tools: yes
          include_sub_features: yes
          state: present
        ignore_errors: true
        register: ad_ds

    # For an unknown reason, sometime installing AD-DS is failing, and a retry succeed. 
    # So in case of failure, do a retry and really failed after the second attempt
      - name: Retry Install AD-Domain-Services in case of failure
        win_feature:
          name: AD-Domain-Services
          include_management_tools: yes
          include_sub_features: yes
          state: present
        when: ad_ds.failed
        register: ad_ds

      - name: Create AD-Domain
        ansible.windows.win_domain:
          dns_domain_name: '{{domain_name}}'
          safe_mode_password: '{{ad_join_password.stdout}}'
        register: ad_promotion
        until: ad_promotion is succeeded
        
      # - name: Promote server
      #   ansible.windows.win_domain_controller:
      #     dns_domain_name: '{{domain_name}}'
      #     domain_admin_user: '{{domain_name}}\{{admin_user}}'
      #     domain_admin_password: '{{ad_join_password.stdout}}'
      #     safe_mode_password: '{{ad_join_password.stdout}}'
      #     install_dns: yes
      #     state: domain_controller
      #   register: ad_promotion

      - name: Reboot after promotion
        ansible.windows.win_reboot:
          post_reboot_delay: 600
        when: ad_promotion.reboot_required

      # - name: update gidnumber azhop-users
      #   community.windows.win_domain_group:
      #     name: "{{ (usergroups | selectattr('gid', 'eq', 5000) | map(attribute='name'))[0]}}"
      #     attributes:
      #       gidnumber: 5000

      - name: Disable password expiration
        win_domain_user:
          name: '{{admin_user}}'
          state: present
          password_never_expires: true
          update_password: on_create

    always:
      - name: close session on local port
        shell: ps aux | grep localhost:5985 | grep -v grep | awk '{print "kill -9 " $2}' | sh
        delegate_to: localhost
        connection: local
        ignore_errors: true
        when: (jumpbox is defined)
