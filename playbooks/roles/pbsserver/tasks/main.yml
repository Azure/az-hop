---
- name: Include distribution variables
  block:
    - name: Include distribution variables
      ansible.builtin.include_vars: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution }}/{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
      tags: [ 'always' ]
  rescue:
    - name: Change error message
      ansible.builtin.fail:
        msg: "unable to find anything in vars/ for this operating system! {{ ansible_distribution }}"

- name: Perform OS dependent configuration tasks
  include_tasks: "{{ansible_distribution}}.yml"

- name: Ensure pbs-server is running.
  service: 
    name: pbs
    state: started
    enabled: yes

- name: check if cyclecloud-pbspro-pkg-{{cyclecloud_pbspro}}.tar.gz file exists
  stat: 
    path: /tmp/cyclecloud-pbspro/cyclecloud-pbspro-pkg-{{cyclecloud_pbspro}}.tar.gz
  register: pbs_cycle_package

- name: check if /tmp/cyclecloud-pbspro/packages exists
  stat: 
    path: /tmp/cyclecloud-pbspro/packages
  register: packages

- name: remove old packages directory if a new version is applied
  file:
    path: /tmp/cyclecloud-pbspro/packages
    state: absent
  when: packages.stat.exists == True and pbs_cycle_package.stat.exists == False

- name: download CycleCloud ScaleLib PBSPro  
  unarchive: 
    src: "https://github.com/Azure/cyclecloud-pbspro/releases/download/{{cyclecloud_pbspro}}/cyclecloud-pbspro-pkg-{{cyclecloud_pbspro}}.tar.gz"
    dest: /tmp/
    remote_src: yes

- name: enable CycleCloud ScaleLib PBSPro
  shell: | 
    source /etc/profile.d/pbs.sh
    export PATH=$PATH:/opt/pbs/bin:/opt/pbs/sbin
    set -xe
    ./initialize_pbs.sh 
    ./initialize_default_queues.sh
    ./install.sh  --install-python3 --venv /opt/cycle/pbspro/venv --cron-method pbs_hook
    # remove /etc/profile.d/azpbs_autocomplete.sh to fix PBS Dataservice not starting
    rm -rf /etc/profile.d/azpbs_autocomplete.sh
    ./generate_autoscale_json.sh  --install-dir /opt/cycle/pbspro --username {{ cc_admin }} --password "{{ cc_password }}" --url https://{{ccportal_name}}:9443{{cycle_webServerContextPath}} --cluster-name pbs1
  args:
    chdir: /tmp/cyclecloud-pbspro

- name: change node timeout, default to 15mn, and accept all hostnames with a -
  shell: |
    jq '.idle_timeout={{autoscale.idle_timeout | default(900) }}' autoscale.json > tmp_autoscale.json || exit 1
    cp tmp_autoscale.json autoscale.json
    sed -i 's/pcpu_count/vcpu_count/g' autoscale.json
    jq '.valid_hostnames=["^.+-.+$"]' autoscale.json > tmp_autoscale.json || exit 1
    cp tmp_autoscale.json autoscale.json
    jq '.' autoscale.json || exit 1
    rm tmp_autoscale.json
  args:
    chdir: /opt/cycle/pbspro

- name: copy custom files
  copy:
    src: '{{role_path}}/files/'
    dest: /opt/cycle/pbspro/

- name: Add pbs sched_config
  copy:
    src: '{{role_path}}/files/sched_config'
    dest: /var/spool/pbs/sched_priv/sched_config

- name: activate pbs config
  shell: |
    chmod +x /opt/cycle/pbspro/doqmgr.sh
    /opt/cycle/pbspro/doqmgr.sh 

# Hook to replace environment variables which contains quotes as they are not supported by PBSPro 19 in the JSON output
# To test it submit a job with the following command a shell session on the ondemand VM :
#   qsub -l select=1:ncpus=1 -V -- /usr/bin/bash -c 'hostname'
# Then validate the output of the job with the following command :
# qstat -fx <jobid> -F json | jq
#
# Bug is fixed in version 20+
- name: Register submission hook
  shell: |
    /opt/pbs/bin/qmgr -c "create hook submit"
    /opt/pbs/bin/qmgr -c "import hook submit application/x-python default submit-hook.py"
    /opt/pbs/bin/qmgr -c "set hook submit event = queuejob"
  args:
    chdir: /opt/cycle/pbspro
  when: openpbs_version == "19.1.1"

# Configure cgroups for largeviz3d machines
# Due to a bug in PBSPro when using hyperthreaded machines we had to use our own cgroups python script.
# This is now fixed in PBSPro 20.0.1. The _assign_resources function in the cgroups hook is the one that was broken, that entire function was backported in 19.1.1
- name: import fixed pbs_cgroups python (only for 19.1.1)
  shell: |
    /opt/pbs/bin/qmgr -c "import hook pbs_cgroups application/x-python default pbs_cgroups.PY"
  args:
    chdir: /opt/cycle/pbspro
  when: openpbs_version == "19.1.1"

- name: configure cgroups for largeviz3d machines
  shell: |
    /opt/pbs/bin/qmgr -c "import hook pbs_cgroups application/x-config default pbs_cgroups.CF"
    /opt/pbs/bin/qmgr -c "set hook pbs_cgroups enabled = true"
  args:
    chdir: /opt/cycle/pbspro

- name: create cron entry to remove old accounting files
  cron:
    name: "remove PBS accounting files older than 90 days"
    special_time: daily
    job: "find /var/spool/pbs/server_logs -mtime +90 -type f -print -exec rm {} +"

- name: Update Packages
  include_role:
    name: pkg_update
    apply: 
      become: true

- name: stop postgresql 
  service: 
    name: postgresql
    state: stopped

- name: stop pbs-server 
  service: 
    name: pbs
    state: stopped

- name: start postgresql 
  service: 
    name: postgresql
    state: started

- name: start pbs-server 
  service: 
    name: pbs
    state: started

- name: check pbs connection
  command: qstat
