---

- name: Install dependencies
  yum:
    name: python3, nfs-utils

- name: Download pbspro 
  unarchive:
    src: https://github.com/PBSPro/pbspro/releases/download/v19.1.1/pbspro_19.1.1.centos7.zip
    dest: /mnt/resource
    remote_src: yes

- name: Install pbspro
  yum:
    name: 
      - /mnt/resource/pbspro_19.1.1.centos7/pbspro-server-19.1.1-0.x86_64.rpm
    state: present

- name: Install CC Jetpack
  yum:
    name: https://packages.microsoft.com/yumrepos/cyclecloud/jetpack8-8.1.0-1275.x86_64.rpm 

- name: Ensure pbs-server is running.
  service: 
    name: pbs
    state: started
    enabled: yes

- name: Prepare CC autoscale scripts dir
  file:
    path: /opt/cycle/jetpack/system/bootstrap/pbs
    state: directory
    mode: '0755'

- name: download pbs cc autoscale script 1 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/autostart.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/autostart.py
    mode: '755'

- name: download pbs cc autoscale script 2 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/autostart_hook.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/autostart_hook.py
    mode: '755'

- name: download pbs cc autoscale script 3
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/logging_init.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/logging_init.py
    mode: '755'

- name: download pbs cc autoscale script 4 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/mockpbs.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/mockpbs.py
    mode: '755'

- name: download pbs cc autoscale script 5
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/pbscc.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/pbscc.py
    mode: '755'
    
- name: download pbs cc autoscale script 6 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/submit_hook.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.py
    mode: '755'

- name: download pbs cc autoscale script 7 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/pbs_driver.py"
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/pbs_driver.py
    mode: '755'

- name: copy tandem_driver files for cc autoscale 1/2
  copy:
    src: /opt/cycle/jetpack/system/chef/chef-repo/cookbooks/tandem/files/default/tandem_driver_main.py
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/tandem_driver_main.py
    remote_src: yes

- name: copy tandem_driver files for cc autoscale 2/2
  copy:
    src: /opt/cycle/jetpack/system/chef/chef-repo/cookbooks/tandem/files/default/tandem_utils.py
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/tandem_utils.py
    remote_src: yes
    
- name: cyclecloud connection config file
  copy: 
    content: | 
      {
      "cyclecloud": {
         "cluster": {
            "name": "pbs1"
         },
         "config": {
           "web_server": "https://ccportal:9443",
           "username": "{{ global_admin_username }}",
           "password": "{{ global_cc_password }}"
         }
       }
      }
    dest: /opt/cycle/jetpack/config/node.json

- name: submit_hook config file
  copy: 
    content: | 
      {
        "__comment__": "This file was generated by serializing node[:cyclecloud][:pbspro][:submit_hook].",
        "disable_eager_packing": true,
        "enabled": true,
        "logging": {
          "level": "INFO",
          "filename": "/var/spool/pbs/autoscale/submit_hook.log",
          "filemode": "a",
          "format": "%(asctime)s %(levelname)s %(message)s"
        }
      }
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.json

- name: autostart config file
  copy: 
    content: | 
       {
         "__comment__": "This file was generated by serializing node[:cyclecloud][:pbspro][:autostart_hook].",
         "src_dirs": [
           "/opt/cycle/jetpack/system/embedded/lib/python3.8/site-packages",
           "/opt/cycle/jetpack/system/bootstrap/pbs"
         ],
         "cyclecloud_home": "/opt/cycle/jetpack",
         "autostart_log_level": "DEBUG",
         "autostart_log_file_level": "DEBUG",
         "cyclecloud.cluster.name": "pbs1"
       }
    dest: /opt/cycle/jetpack/system/bootstrap/pbs/autostart.json

- name: enable pbs autoscale hook
  shell: | 
      /opt/pbs/bin/qmgr -c "create hook autoscale" 1>&2 || true
      /opt/pbs/bin/qmgr -c "import hook autoscale application/x-python default /opt/cycle/jetpack/system/bootstrap/pbs/autostart_hook.py"
      /opt/pbs/bin/qmgr -c "import hook autoscale application/x-config default /opt/cycle/jetpack/system/bootstrap/pbs/autostart.json"
      /opt/pbs/bin/qmgr -c "set hook autoscale event = periodic"
      /opt/pbs/bin/qmgr -c "set hook autoscale freq = 15"
      /opt/pbs/bin/qmgr -c "create hook cycle_sub_hook" 2>/dev/null || true
      /opt/pbs/bin/qmgr -c "set hook cycle_sub_hook event = queuejob" 2>/dev/null || true
      /opt/pbs/bin/qmgr -c "create hook cycle_sub_periodic_hook" 2>/dev/null || true
      /opt/pbs/bin/qmgr -c "set hook cycle_sub_periodic_hook event = periodic" 2>/dev/null || true
      /opt/pbs/bin/qmgr -c "set hook cycle_sub_periodic_hook freq = 15"  2>/dev/null || true
      /opt/pbs/bin/qmgr -c "import hook cycle_sub_hook application/x-python default /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.py"
      /opt/pbs/bin/qmgr -c "import hook cycle_sub_hook application/x-config default /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.json"
      /opt/pbs/bin/qmgr -c "import hook cycle_sub_periodic_hook application/x-python default /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.py"
      /opt/pbs/bin/qmgr -c "import hook cycle_sub_periodic_hook application/x-config default /opt/cycle/jetpack/system/bootstrap/pbs/submit_hook.json"

#- name: check pbspro 1/4 - manager
#  shell: /opt/pbs/bin/qmgr -c 'p s managers' | grep -v '#' | grep {{pbs_admin}}
#  register: pbspro_manager
#  ignore_errors: true

#- name: Configure pbs 1/4
#  shell: /opt/pbs/bin/qmgr -c 's s managers += {{pbs_admin}}@*'
#  when: pbspro_manager is failed

#- name: check pbspro 2/4 - flatuid
#  shell: /opt/pbs/bin/qmgr -c 'p s flatuid' | grep -v '#' | grep 'flatuid = True'
#  register: pbspro_flatuid
#  ignore_errors: true

#- name: Configure pbs 2/4
#  shell: /opt/pbs/bin/qmgr -c 's s flatuid=t'
#  when: pbspro_flatuid is failed

#- name: check pbspro 3/4 - job_history_enable
#  shell: /opt/pbs/bin/qmgr -c 'p s job_history_enable' | grep -v '#' | grep 'job_history_enable = True'
#  register: pbspro_job_history_enable
#  ignore_errors: true

#- name: Configure pbs 3/4
#  shell: /opt/pbs/bin/qmgr -c 's s job_history_enable=t'
#  when: pbspro_job_history_enable is failed

#- name: check pbspro 4/4 - pool_name resource
#  shell: /opt/pbs/bin/qmgr -c 'p r pool_name' | grep -v '#' | grep 'pool_name'
#  register: pbspro_pool_name
#  ignore_errors: true

#- name: Configure pbs 4/4
#  shell: /opt/pbs/bin/qmgr -c 'c r pool_name type=string,flag=h'
#  when: pbspro_pool_name is failed

- name: download pbs script 1 
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/doqmgr.sh"
    dest: /var/spool/pbs/doqmgr.sh
    mode: '777'
  when: pbs_cc_headless

- name: download pbs config
  get_url: 
    url: "https://raw.githubusercontent.com/Azure/cyclecloud-pbspro/master/specs/default/chef/site-cookbooks/pbspro/files/default/sched.config"
    dest: /var/spool/pbs/sched_priv/sched_config
  when: pbs_cc_headless

- name: activate pbs config
  shell: /var/spool/pbs/doqmgr.sh && touch /etc/qmgr.config
  args:
    creates: /etc/qmgr.config
  when: pbs_cc_headless

- name: Restart pbs-server 
  service: 
    name: pbs
    state: restarted
