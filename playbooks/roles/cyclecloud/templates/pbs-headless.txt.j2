
################################
## Cluster Configuration File ##
################################

[cluster OpenPBS-headless]
FormLayout = selectionpanel
Category = Azure HPC OnDemand Platform 

Autoscale = true

    [[node defaults]]
    UsePublicNetwork = false
    Credentials = $Credentials    
    ImageName = $ImageName
    SubnetId = {{ cc_subnetid }}
    Region = {{ cc_region }}
    KeyPairLocation = ~/.ssh/cyclecloud.pem
    EnableAcceleratedNetworking = false

        [[[configuration]]]
        cyclecloud.converge_on_boot = true
        # This is to avoid hostnames to be renamed ip-XXXXXXXX, waiting for a fix from PBSPro with scalelib integration
        #cyclecloud.hosts.standalone_dns.enabled = false

        # Disable normal NFS exports and mounts
        cyclecloud.mounts.sched.disabled = true
        cyclecloud.mounts.shared.disabled = true
        cyclecloud.exports.sched.disabled = true
        cyclecloud.exports.shared.disabled = true
        cyclecloud.exports.sched.samba.enabled = false
        cyclecloud.exports.shared.samba.enabled = false
        cyclecloud.exports.defaults.samba.enabled = false      
        cshared.server.legacy_links_disabled = true

        [[[volume boot]]] 
        StorageAccountType = StandardSSD_LRS

{% for queue in cc_queues %}
    [[nodearray {{ queue.name }}]]
    MachineType = {{ queue.vm_size }} 
    MaxCoreCount = {{ queue.max_core_count }}
  {% if queue.EnableAcceleratedNetworking is defined %}        
    EnableAcceleratedNetworking = {{ queue.EnableAcceleratedNetworking }}
  {% endif %}
    Interruptible = false
    # Lookup image version for that queue
  {% if cc_image_lookup is defined and queue.name in cc_image_lookup %}
    ImageName = {{ cc_image_lookup[queue.name] }}
  {% else %}
    ImageName = {{ queue.image }}
  {% endif %}
    AdditionalClusterInitSpecs = $ExecuteClusterInitSpecs
        [[[configuration]]]
        pbspro.slot_type = {{ queue.name }}
{% endfor %}

[parameters Advanced Settings]
Order = 20

    [[parameters Azure Settings]]
    Order = 10 

        [[[parameter Credentials]]]
        Description = The credentials for the cloud provider
        ParameterType = Cloud.Credentials

        [[[parameter ImageName]]]
        Label = Compute OS
        ParameterType = Cloud.Image
        Config.OS = linux
        DefaultValue = cycle.image.centos8
        Config.Filter := Package in {"cycle.image.centos7", "cycle.image.centos8"}

   
        [[[parameter ExecuteClusterInitSpecs]]]
        Label = Execute Cluster-Init
        DefaultValue = =undefined
        Description = Cluster init specs to apply to execute nodes
        ParameterType = Cloud.ClusterInitSpecs

