---

# setup CycleCloud. Ported from https://github.com/Azure/cyclecloud-marketplace-image/blob/main/scripts/setup_cyclecloud.sh
- name: debug
  debug:
    msg:
      - "cc_version={{cc_version}}"
      - "Distribution={{ansible_distribution}}"

- name: mount data disk
  shell: |
    set -e
    # If cycle_server is already mounted, exit
    if grep -q cycle_server /etc/fstab; then exit 0; fi
    parted /dev/disk/azure/scsi1/lun0 --script -- mklabel gpt
    parted -a optimal /dev/disk/azure/scsi1/lun0 mkpart primary 0% 100%
    # try a sleep here to wait for the symlink
    sleep 10s
    mkfs -t xfs /dev/disk/azure/scsi1/lun0-part1
    disk_uuid=$(blkid -o value -s UUID  /dev/disk/azure/scsi1/lun0-part1)
    mkdir /opt/cycle_server
    echo "UUID=$disk_uuid /opt/cycle_server xfs defaults,nofail 1 2" >> /etc/fstab
    mount /opt/cycle_server

- name: Perform OS dependent configuration tasks
  include_tasks: "{{ansible_distribution}}.yml"

- name: Create a data record for azhop and start cycleserver
  shell: |
    set -e
    # create a data record to identify this installation as an az-hop VM
    cat > /opt/cycle_server/config/data/azhop.txt <<EOF
    AdType = "Application.Setting"
    Name = "distribution_method"
    Value = "azhop"
    EOF
    /opt/cycle_server/cycle_server await_startup
    #/opt/cycle_server/cycle_server execute 'update Application.Setting set Value = undefined where Name == "site_id" || Name == "reported_version"'
  args:
    creates: /opt/cycle_server/config/data/azhop.txt.imported

- name: Extract and install the CLI
  shell: |
    set -e
    _tmpdir=$(mktemp -d)
    mydir=$PWD
    cd $_tmpdir
    CS_ROOT=/opt/cycle_server
    unzip $CS_ROOT/tools/cyclecloud-cli.zip
    cd cyclecloud-cli-installer
    ./install.sh --system -y
    cd $mydir
    # Update properties
    sed -i 's/webServerMaxHeapSize\=2048M/webServerMaxHeapSize\=4096M/' $CS_ROOT/config/cycle_server.properties
    sed -i 's/webServerPort\=8080/webServerPort\=80/' $CS_ROOT/config/cycle_server.properties
    sed -i 's/webServerSslPort\=8443/webServerSslPort\=443/' $CS_ROOT/config/cycle_server.properties
    sed -i 's/webServerEnableHttps\=false/webServerEnableHttps=true/' $CS_ROOT/config/cycle_server.properties
    touch /opt/cycle_server/cli_installed
  args:
    creates: /opt/cycle_server/cli_installed

- name: stop cycle_server
  service:
    name: cycle_server
    state: stopped

- name: Update cycle server properties
  shell: |
    sed -i 's/^webServerContextPath=.*$/webServerContextPath=\/cyclecloud/g;s/^webServerRedirectHttp=.*$/webServerRedirectHttp=false/g' /opt/cycle_server/config/cycle_server.properties
    /opt/cycle_server/cycle_server restart

- name: Configure Cycle Cloud portal host
  script: '{{role_path}}/files/configure.py --useManagedIdentity --username {{cc_admin_user}} --acceptTerms --publickey "{{cc_public_key}}" --password "{{cc_password}}" --storageAccount {{cc_storage}}'

- name: Configure AD domain to connect to
  script: '{{role_path}}/files/configure_ad.py --url "ldap://{{cc_ldap_server}}" --domain "@{{cc_domain}}"'
  when: (authentication.user_auth | default('ad')) == "ad"

- name: Add User Role Record 
  copy:
    src: '{{role_path}}/files/user_role_record.txt'
    dest: /opt/cycle_server/config/data/user_role_record.txt

- name: Rebranding record
  copy:
    src: '{{role_path}}/files/brand.json'
    dest: /opt/cycle_server/config/data/brand.json

- name: Fix CSS
  copy:
    src: '{{role_path}}/files/fabric.css'
    dest: /opt/cycle_server/system/web/static/office-ui-fabric-react/css/fabric.css
  when: cc_version == "8.2.2-1902"

- name: Configure CycleCloud CLI
  command: '/usr/local/bin/cyclecloud initialize --force --batch --name ccportal --url=https://localhost:9443/cyclecloud --verify-ssl=false --username={{cc_admin_user}} --password="{{cc_password}}"'
  args:
    creates: /root/.cycle/config.ini

- name: Update "default locker" configuration cyclecloud-cli
  blockinfile:
    path: /root/.cycle/config.ini
    insertafter: "[cyclecloud]"
    block: |
      default_project_locker = azure-storage
