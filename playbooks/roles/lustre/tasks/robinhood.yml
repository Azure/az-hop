---

- name: check to see if lustre is hydrated
  stat:
    path: /lustre.hydrated
  register: stat_hydrated

- name: hydrate lustre
  shell: |
    export AZURE_ENVIRONMENT={{ azure_environment }}
    cd /lustre
    azure-import -account "{{ lustre_hsm_storage_account }}" -container "{{ lustre_hsm_storage_container }}" -suffix "{{ blob_storage_suffix }}" -kvname "{{ key_vault }}" -kvsuffix "{{ key_vault_suffix }}" -kvsecret "lustre-{{ lustre_hsm_storage_account }}-{{ lustre_hsm_storage_container }}-sas" || exit 1
    touch /lustre.hydrated
  when: not stat_hydrated.stat.exists

# Install Robinhood
- name: install epel-release (for jemalloc)
  yum:
    name:
      - epel-release
    state: present
    lock_timeout : 180

- name: install robinhood dependencies
  yum:
    name:
      - mariadb-server
      - mariadb-devel
      - jemalloc
      - expect
    state: present
    lock_timeout : 180

- name: install robinhood rpms
  yum:
    name:
      - https://azurehpc.azureedge.net/rpms/robinhood-adm-3.1.6-1.x86_64.rpm
      - https://azurehpc.azureedge.net/rpms/robinhood-tools-3.1.6-1.lustre2.12.el7.x86_64.rpm
      - https://azurehpc.azureedge.net/rpms/robinhood-lustre-3.1.6-1.lustre2.12.el7.x86_64.rpm
    state: present
    lock_timeout : 180

- name: enable and start mariadb service
  service:
    name: mariadb
    enabled: yes
    state: started

- name: check for db password file
  stat:
    path: /etc/robinhood.d/.dbpassword
  register: stat_dbpassword

- name: create robinhood database
  shell: |
    rbhpass=$(openssl rand -base64 12)
    rbh-config create_db lustre "%" "$rbhpass" || exit 1
    echo "$rbhpass" > /etc/robinhood.d/.dbpassword
    chmod 600 /etc/robinhood.d/.dbpassword
  when: not stat_dbpassword.stat.exists

- name: Create robinhood lustre config
  template:
    src: lustre.conf.j2
    dest: /etc/robinhood.d/lustre.conf
    mode: 0600

- name: setup log rotation for robinhood
  copy:
    dest: /etc/logrotate.d/robinhood
    mode: 0644
    content: |
      /var/log/robinhood*.log {
          compress
          weekly
          rotate 6
          notifempty
          missingok
      }

- name: create lfs_hsm_remove script
  copy:
    dest: /usr/sbin/lfs_hsm_remove.sh
    mode: 0755
    content: |
      #!/bin/bash

      fsroot="$1"
      fullpath="$2"
      archive_id="$3"
      fid="$4"

      lfs hsm_remove --data "{\"file_id\":\"${fullpath#${fsroot}/}\"}" --archive ${archive_id} --mntpath ${fsroot} ${fid}

- name: start robinhood service
  service:
    name: robinhood
    enabled: yes
    state: started

- name: scan filesystem
  command: robinhood --scan --once

# Install Robinhood UI
- name: install robinhood web ui dependencies
  yum:
    name:
      - php
      - php-mysql
      - php-xml
      - php-pdo
      - php-gd
    state: present
    lock_timeout : 180

- name: install robinhood web ui rpm
  yum:
    name:
      - https://azurehpc.azureedge.net/rpms/robinhood-webgui-3.1.6-1.x86_64.rpm
    state: present
    lock_timeout : 180

- name: start webserver
  service:
    name: httpd
    enabled: yes
    state: started

- name: replace name
  lineinfile: 
    path: /var/www/robinhood/config.php
    regexp: '"DB_NAME"     => "",' 
    line: '"DB_NAME"     => "lustre",'
    backrefs: yes

- name: replace user
  lineinfile: 
    path: /var/www/robinhood/config.php
    regexp: '"DB_USER"     => "",' 
    line: '"DB_USER"     => "robinhood",'
    backrefs: yes

- name: get password
  shell: cat /etc/robinhood.d/.dbpassword | sed 's/"/\\"/g'
  register: dbpasswd

- name: replace password
  lineinfile: 
    path: /var/www/robinhood/config.php
    regexp: '"DB_PASSWD"   => "",' 
    line: '"DB_PASSWD"   => "{{ dbpasswd.stdout }}",'
    backrefs: yes

# Enable changelog_reader on robinhood
- name: create lustremetasync service
  copy:
    dest: /etc/systemd/system/lustremetasync.service
    mode: 0600
    content: |
      [Unit]
      Description=Handling directory/meta data backup on Lustre filesystem.
      After=syslog.target network.target remote-fs.target nss-lookup.target

      [Service]
      Type=simple
      ExecStart=/sbin/changelog-reader -account "{{ lustre_hsm_storage_account }}" -suffix "{{ blob_storage_suffix }}" -container "{{ lustre_hsm_storage_container }}" -kvname "{{ key_vault }}" -kvsuffix "{{ key_vault_suffix }}" -kvsecret "lustre-{{ lustre_hsm_storage_account }}-{{ lustre_hsm_storage_container }}-sas" -mdt LustreFS-MDT0000 -userid cl2
      Restart=always
      Environment=AZURE_ENVIRONMENT={{ azure_environment }}

      [Install]
      WantedBy=multi-user.target

- name: systemd daemon reload
  systemd:
    daemon_reload: yes

- name: enable and start lustremetasync service
  service:
    name: lustremetasync
    enabled: yes
    state: started
