#!/bin/bash
packages="sssd realmd oddjob oddjob-mkhomedir adcli samba-common samba-common-tools krb5-workstation openldap-clients policycoreutils-python"

if ! rpm -q $packages; then
  echo "Installing packages $packages" 
  yum install -y $packages
  echo "Restart dbus systemd-logind"
  systemctl restart dbus
  systemctl restart systemd-logind
fi

echo "Update nameserver"
# https://docs.microsoft.com/en-us/azure/virtual-machines/linux/azure-dns
echo "RES_OPTIONS=\"timeout:1 attempts:5\"" >> /etc/sysconfig/network 

NAMESERVER={{ ad_dns }}

sed -i "s/nameserver.*/nameserver ${NAMESERVER}\nnameserver 168.63.129.16/g" /etc/resolv.conf

echo "supersede domain-name-servers ${NAMESERVER};" > /etc/dhcp/dhclient.conf
echo "append domain-name-servers 168.63.129.16;" >> /etc/dhcp/dhclient.conf

sed -i 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config

cat <<EOF >/etc/ssh/ssh_config
Host *
    StrictHostKeyChecking no
    UserKnownHostsFile /dev/null
EOF

ADMIN_DOMAIN={{ ad_join_domain }}
ADMIN_NAME={{ ad_join_user }}
ADMIN_PASSWORD={{ cc_password }}

delay=15
n=1
max_retry=3

while true; do
  logger -s "Domain join on $ADMIN_DOMAIN"
  echo $ADMIN_PASSWORD| realm join -U $ADMIN_NAME $ADMIN_DOMAIN

  if [ ! -f "/etc/sssd/sssd.conf" ]; then
    if [[ $n -le $max_retry ]]; then
      logger -s "Failed to domain join the server -  Attempt $n/$max_retry:"
      sleep $delay
      ((n++))
    else
      logger -s "Failed to domain join the server after $n attempts."
      exit 1
    fi
  else
    logger -s "Successfully joined domain $ADMIN_DOMAIN"
    realm list
    break
  fi
done

sed -i 's@use_fully_qualified_names.*@use_fully_qualified_names = False@' /etc/sssd/sssd.conf
sed -i 's@ldap_id_mapping.*@ldap_id_mapping = False@' /etc/sssd/sssd.conf

systemctl restart sssd
systemctl restart sshd

function enfore_hostname() {
  local system_hostname=$1
  local target_hostname=$2

  # ensure the correct hostname (update if necessary)
  echo "ensure the correct hostname (update if necessary)"
  #ipaddr=$(hostname -i)
  #system_hostname=$(hostname)
  #target_hostname="ip-$(printf '%02X' ${ipaddr//./ })"
  #target_hostname=$(jetpack config cyclecloud.node.name)
  if [ "$system_hostname" != "$target_hostname" ]; then
    logger -s "Warning: incorrect hostname ($system_hostname), it should be $target_hostname, updating"
    hostname $target_hostname
  fi
  if grep -i $system_hostname /etc/hosts; then
    logger -s "Warning: incorrect hostname ($system_hostname) in /etc/hosts, updating"
    sed -i "s/$system_hostname/$target_hostname/ig" /etc/hosts
  fi
  etc_hostname=$(</etc/hostname)
  if [ "$etc_hostname" != "$target_hostname" ]; then
    logger -s "Warning: incorrect /etc/hostname ($etc_hostname), it should be $target_hostname, updating"
    echo $target_hostname > /etc/hostname
  fi
  eth0_hostname=$(grep DHCP_HOSTNAME /etc/sysconfig/network-scripts/ifcfg-eth0 | cut -d'=' -f2)
  if [ "$eth0_hostname" != "$target_hostname" ]; then
    logger -s "Warning: incorrect DHCP_HOSTNAME in /etc/sysconfig/network-scripts/ifcfg-eth0 ($etc_hostname), it should be $target_hostname, updating"
    sed -i "s/^DHCP_HOSTNAME=.*\$/DHCP_HOSTNAME=$target_hostname/g" /etc/sysconfig/network-scripts/ifcfg-eth0
    systemctl restart NetworkManager
  fi
}

n=1
while true; do
  current_hostname=$(hostname)
  target_hostname=$(jetpack config cyclecloud.node.name)

  if [[ $n -le $max_retry ]]; then
    if [ "$current_hostname" != "$target_hostname" ]; then
      logger -s "hostname not renamed -  Attempt $n/$max_retry:"
      enfore_hostname $current_hostname $target_hostname
      sleep $delay
    else
      logger -s "hostname successfully renamed"
      break
    fi
    ((n++))
  else
    logger -s "Failed to rename host after $n attempts."
    exit 1
  fi
done

# Check if we are domain joined
realm list | grep active-directory
if [ $? -eq 1 ]; then
  logger -s "Node $(hostname) is not domain joined"
  exit 1
fi
