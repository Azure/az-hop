- name: Read database Password from KV
  command: az keyvault secret show --vault-name {{key_vault}} -n {{database_user}}-password --query "value" -o tsv
  delegate_to: localhost
  connection: local
  register: database_password_out
  become: false

- name: configure slurmdbd
  template:
    src: templates/slurmdbd.conf.j2
    dest: /etc/slurm/slurmdbd.conf
    owner: slurm 
    group: slurm
    mode: 0600
  vars:
    database_password: "{{database_password_out.stdout}}"

# - name: download BaltimoreCyberTrustRoot certificate
#   get_url:
#     url: 'https://www.digicert.com/CACerts/BaltimoreCyberTrustRoot.crt.pem'
#     dest: /etc/slurm
#     mode: 0644
#     timeout: 180

- name: download DigiCertGlobalRootG2 certificate
  get_url:
    url: 'https://cacerts.digicert.com/DigiCertGlobalRootG2.crt.pem'
    dest: /etc/slurm
    mode: 0644
    timeout: 180

- name: ensure slurmdbd is restarted.
  service:
    name: slurmdbd
    state: restarted
    enabled: yes

# How to wait for the service to be started ?
# - name: Wait a maximum of 60 seconds until slurmdbd is running
#   wait_for:
#     path: /var/log/slurmctld/slurmdbd.log
#     search_regex: slurmdbd version \d+.\d+.\d+ started
#     timeout: 60

# retry this command 5 times before failing, this should ensure the slurmdb service is ready
- name: check slurmdb connection
  command: "sacctmgr list cluster"
  retries: 5
  delay: 5
  register: result
  until: result.rc == 0

- name: check if cluster exists in the accounting database
  shell: "sacctmgr -np show cluster {{cluster_name}}|wc -l"
  register: cluster_exists

- name: add cluster to slurm accounting DB
  shell: "sacctmgr -i add cluster {{cluster_name}}"
  when: cluster_exists.stdout == "0"