---

- name: install dependencies
  yum:
    name: python3, python3-pip, munge, munge-devel, rpm-build, readline-devel, pam-devel, perl-ExtUtils-MakeMaker, gcc, mariadb-devel

- name: add slurm group 
  group:
    name: slurm
    gid: 985
    state: present

- name: add slurm user
  user:
    name: slurm 
    group: slurm
    uid: 985
    state: present

- name: check local munge dir
  file:
    path: /etc/munge
    owner: munge
    group: munge
    mode: 0700
    state: directory

- name: install munge key
  copy:
    content: "12345678901234567890123456789012"
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: 0400

- name: ensure munge is running.
  service:
    name: munge 
    state: started
    enabled: yes

- name: check slurm rpm dir 
  file:
    path: /anfhome/slurm/rpms/
    mode: 0755
    state: directory

- name: check slurm config dir 
  file:
    path: /anfhome/slurm/config/
    mode: 0755
    owner: slurm 
    group: slurm 
    state: directory

- name: check local slurm config dir 
  file:
    path: /etc/slurm/
    mode: 0755
    owner: slurm 
    group: slurm 
    state: directory

- name: create a symbolic link for slurm config dir
  file:
    src: /anfhome/slurm/config
    dest: /sched
    owner: slurm 
    group: slurm 
    state: link

- name: check slurmctld log dir 
  file:
    path: /var/log/slurmctld/
    mode: 0755
    owner: slurm 
    group: slurm 
    state: directory

- name: check slurmctld log dir 
  file:
    path: /var/spool/slurmd/
    mode: 0755
    owner: slurm 
    group: slurm 
    state: directory

- name: check if slurm rpms exist
  stat:
    path: /anfhome/slurm/rpms/slurm-20.11.7-1.el7.x86_64.rpm 
  register: slurm_rpms

- name: download slurm 
  get_url:
    url: https://download.schedmd.com/slurm/slurm-20.11.7.tar.bz2 
    dest: /mnt/resource
  when: slurm_rpms.stat.exists == False

- name: build slurm
  shell: |
    rpmbuild --clean -ta /mnt/resource/slurm-20.11.7.tar.bz2 > log.txt
    sudo cp /root/rpmbuild/RPMS/x86_64/slurm-*.rpm /anfhome/slurm/rpms/
  args:
    chdir: "{{ ansible_env.HOME }}/rpmbuild"
  when: slurm_rpms.stat.exists == False


- name: check central slurm dir 
  file:
    path: /anfhome/slurm/slurmctld/
    mode: 0755
    owner: slurm 
    group: slurm 
    state: directory

- name: install slurm 
  yum:
    name:
      -  /anfhome/slurm/rpms/slurm-20.11.7-1.el7.x86_64.rpm
      -  /anfhome/slurm/rpms/slurm-perlapi-20.11.7-1.el7.x86_64.rpm
      -  /anfhome/slurm/rpms/slurm-slurmctld-20.11.7-1.el7.x86_64.rpm
    state: present

- name: create slurm config 
  copy:
    src: files/slurm.conf
    dest: /sched/slurm.conf

- name: create slurm cgroup config 
  copy:
    src: files/cgroup.conf
    dest: /sched/cgroup.conf

- name: check slurm autoscale dir 
  file:
    path: /opt/cycle/slurm/
    mode: 0755
    state: directory

- name: download cc autoscale scripts
  get_url:
    url: https://raw.githubusercontent.com/Azure/cyclecloud-slurm/master/specs/default/chef/site-cookbooks/slurm/files/default/{{ item }}
    dest: /opt/cycle/slurm
  with_items:
    - clusterwrapper.py
    - cyclecloud_nodeinfo.sh
    - cyclecloud_slurm.py
    - cyclecloud_slurm.sh
    - cyclecloud_slurm_test.py
    - resume_fail_program.sh
    - resume_program.sh
    - return_to_idle.sh
    - slurm-limits.conf
    - slurmcc.py
    - slurmcc_test.py
    - slurmctld.override
    - suspend_program.sh
    - terminate_nodes.sh

- name: check execute bit for cyclecloud_slurm.sh 
  file:
    path: /opt/cycle/slurm/cyclecloud_slurm.sh
    mode: 0755

- name: install jetpack 
  yum:
    name:
      -  https://packages.microsoft.com/yumrepos/cyclecloud/jetpack8-8.1.1-1451.x86_64.rpm 
    state: present

- name: download cc autoscale api 
  get_url:
    url: https://github.com/Azure/cyclecloud-slurm/releases/download/2.4.8/cyclecloud_api-8.1.0-py2.py3-none-any.whl 
    dest: /opt/cycle/slurm

- name: download cc jobsubmit plugin
  get_url:
    url: https://github.com/Azure/cyclecloud-slurm/releases/download/2.4.7/job_submit_cyclecloud_centos_20.11.7-1.so 
    dest: /usr/lib64/slurm/job_submit_cyclecloud.so

- name: install cc autoscale api 
  shell: |
      /opt/cycle/jetpack/system/embedded/bin/pip install /opt/cycle/slurm/cyclecloud_api-8.1.0-py2.py3-none-any.whl  2>&1
      /opt/cycle/slurm/cyclecloud_slurm.sh initialize --cluster-name slurm1 --username "{{ cc_admin }}" --password "{{ cc_password }}" --url https://ccportal:9443/cyclecloud
  args:
    creates: /opt/cycle/jetpack/config/autoscale.json

- name: create emtpy cyclecloud.conf
  copy:
    content: ""
    dest: /sched/cyclecloud.conf
    force: no

- name: symbolic link for cyclecloud.conf 
  file:
    src: /sched/cyclecloud.conf
    dest: /etc/slurm/cyclecloud.conf
    state: link

- name: initialize slurm autoscale config 
  shell: |
      /opt/cycle/slurm/cyclecloud_slurm.sh upgrade_conf 
  #args:
      #creates: /opt/cycle/jetpack/config/autoscale.json

- name: initialize slurm autoscale config 
  shell: |
      /opt/cycle/slurm/cyclecloud_slurm.sh create_nodes --policy AllowExisting 
      #/opt/cycle/slurm/cyclecloud_slurm.sh slurm_conf > /sched/cyclecloud.conf 
      #/opt/cycle/slurm/cyclecloud_slurm.sh gres_conf > /sched/gres.conf 
      #/opt/cycle/slurm/cyclecloud_slurm.sh topology > /sched/topology.conf
  #args:
      #creates: /opt/cycle/jetpack/config/autoscale.json

- name: initialize slurm autoscale config 
  shell: |
      /opt/cycle/slurm/cyclecloud_slurm.sh slurm_conf > /sched/cyclecloud.conf 
      #/opt/cycle/slurm/cyclecloud_slurm.sh gres_conf > /sched/gres.conf 
      #/opt/cycle/slurm/cyclecloud_slurm.sh topology > /sched/topology.conf
  #args:
      #creates: /opt/cycle/jetpack/config/autoscale.json

- name: initialize slurm autoscale config 
  shell: |
      /opt/cycle/slurm/cyclecloud_slurm.sh gres_conf > /sched/gres.conf 
      #/opt/cycle/slurm/cyclecloud_slurm.sh topology > /sched/topology.conf
  #args:
      #creates: /opt/cycle/jetpack/config/autoscale.json

- name: initialize slurm autoscale config 
  shell: |
      /opt/cycle/slurm/cyclecloud_slurm.sh topology > /sched/topology.conf
  #args:
      #creates: /opt/cycle/jetpack/config/autoscale.json

- name: symbolic link for slurm.conf 
  file:
    src: /sched/slurm.conf
    dest: /etc/slurm/slurm.conf
    state: link

- name: symbolic link for gres.conf 
  file:
    src: /sched/gres.conf
    dest: /etc/slurm/gres.conf
    state: link

- name: symbolic link for topology.conf 
  file:
    src: /sched/topology.conf
    dest: /etc/slurm/topology.conf
    state: link

- name: ensure slurmctld is running.
  service:
    name: slurmctld
    state: started
    enabled: yes

