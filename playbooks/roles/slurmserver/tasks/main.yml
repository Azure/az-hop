---
- name: Include distribution variables
  block:
    - name: Include distribution variables
      ansible.builtin.include_vars: "{{ item }}"
      with_first_found:
        - "{{ ansible_distribution }}/{{ ansible_distribution_major_version }}.yml"
        - "{{ ansible_distribution }}.yml"
      tags: [ 'always' ]
  rescue:
    - name: Change error message
      ansible.builtin.fail:
        msg: "unable to find anything in vars/ for this operating system! {{ ansible_distribution }}"

- include: cyclecloud-slurm_2.7.x.yml
  become: true
  when: cyclecloud_slurm_release == '2.7.0' or cyclecloud_slurm_release == '2.7.1' or cyclecloud_slurm_release == '2.7.2'

- include: cyclecloud-slurm_3.0.x.yml
  become: true
  when: cyclecloud_slurm_release == '3.0.4'

- name: Update slurm service to start after the home directory is mounted
  lineinfile:
    path: /usr/lib/systemd/system/slurmctld.service
    insertafter: 'ConditionPathExists='
    line: 'RequiresMountsFor={{homedir_mountpoint}}'
    state: present
    firstmatch: yes

- name: check slurm scripts dir
  file:
    path: /sched/scripts
    mode: 0755
    state: directory

- name: create slurm prolog
  template:
    src: templates/prolog.sh.j2
    dest: /sched/scripts/prolog.sh
    owner: slurm
    group: slurm
    mode: 0755

- name: create slurm epilog
  template:
    src: templates/epilog.sh.j2
    dest: /sched/scripts/epilog.sh
    owner: slurm
    group: slurm
    mode: 0755

- name: ensure slurmctld is running.
  service:
    name: slurmctld
    state: restarted
    enabled: yes

- name: Wait a maximum of 120 seconds until slurctld is running
  wait_for:
    path: /var/log/slurmctld/slurmctld.log
    # slurmctld version \d+.\d+.\d+ started
    search_regex: Running as primary controller
    timeout: 120

# Will fail with database error if slurm is downgraded from 22.05 to 20.11.
# Run "slurmctld -i" to fix. 
# WARNING: using -i will lose the state data that can't be recovered.
- name: check slurm connection
  command: "sinfo -l"
  retries: 5
  delay: 3
  register: result
  until: result.rc == 0

- name: create slurm logrotate config
  copy:
    src: files/slurm.logrotate
    dest: /etc/logrotate.d/slurm

- include: pyxis.yml
  become: true
  tags: [ 'pyxis' ]
