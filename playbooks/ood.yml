- hosts: ondemand
  #gather_facts: no
  become: true
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Set up PAM authentication
    shell: |
      yum install -y mod_authnz_pam
      mkdir -p /opt/rh/httpd24/root/usr/lib64/httpd/modules/
      cp /usr/lib64/httpd/modules/mod_authnz_pam.so /opt/rh/httpd24/root/usr/lib64/httpd/modules/
      mkdir -p /opt/rh/httpd24/root/etc/httpd/conf.modules.d
      echo "LoadModule authnz_pam_module modules/mod_authnz_pam.so" > /opt/rh/httpd24/root/etc/httpd/conf.modules.d/55-authnz_pam.conf
      cp /etc/pam.d/sshd /etc/pam.d/ood
      chmod 640 /etc/shadow
      chgrp apache /etc/shadow
    args:
      creates: /etc/pam.d/ood

  - name: Check if we need to register HTTPS
    stat:
      path: /etc/ssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.crt
    register: sslcert

  - name: Run the ood-ansible role to get certificate
    include_role:
      name: ood-ansible
    vars:
      servername: null
      httpd_port: 80
      httpd_public_uri: /.well-known
      httpd_public_root: /var/www/ood/.well-known
    when: sslcert.stat.exists == False

  - name: Setup HTTPS certificate
    shell: |
      cd /root

      # get ssl
      curl --silent https://raw.githubusercontent.com/srvrco/getssl/master/getssl > getssl
      chmod 700 getssl

      # Generate the certificate
      ./getssl -c {{ ondemand_fqdn }}
      cat <<EOF > ${HOME}/.getssl/{{ ondemand_fqdn }}/getssl.cfg 
      CA="https://acme-v02.api.letsencrypt.org"
      SANS=""
      ACL=('/var/www/ood/.well-known/acme-challenge')
      EOF
      ./getssl {{ ondemand_fqdn }} 2>&1 | tee getssl-{{ ondemand_fqdn }}.log

      # set the certificate
      mkdir /etc/ssl/{{ ondemand_fqdn }}
      cp /root/.getssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.crt /etc/ssl/{{ ondemand_fqdn }}
      cp /root/.getssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.key /etc/ssl/{{ ondemand_fqdn }}
      wget https://letsencrypt.org/certs/letsencryptauthorityx3.pem.txt -O /etc/ssl/{{ ondemand_fqdn }}/letsencryptauthorityx3.pem.txt
    args:
      creates: /etc/ssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.crt
    when: sslcert.stat.exists == False

  - name: Read Password from KV
    command: az keyvault secret show --vault-name {{key_vault}} -n azhop-aad-password --query "value" -o tsv
    delegate_to: localhost
    connection: local
    register: password
    become: false
    run_once: true

  - name: Run the ood-ansible role for HTTPS
    include_role:
      name: ood-ansible
    vars:
      servername: "{{ ondemand_fqdn }}"
      httpd_port: 443
      ssl:
      - SSLCertificateFile "/etc/ssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.crt"
      - SSLCertificateKeyFile "/etc/ssl/{{ ondemand_fqdn }}/{{ ondemand_fqdn }}.key"
      - SSLCertificateChainFile "/etc/ssl/{{ ondemand_fqdn }}/letsencryptauthorityx3.pem.txt"
      oidc_client_secret: '{{password.stdout}}'

  # FIX : issue 116 open https://github.com/OSC/ood-ansible/issues/116
  # - name: Fix wrong OIDCPassRefreshToken value set in /opt/rh/httpd24/root/etc/httpd/conf.d/ood-portal.conf
  #   lineinfile: 
  #     path: /opt/rh/httpd24/root/etc/httpd/conf.d/ood-portal.conf 
  #     regexp: 'OIDCPassRefreshToken true' 
  #     line: 'OIDCPassRefreshToken On'
  #     backrefs: yes

  - name: Copy logo
    copy: 
      src: logo.png
      dest: /var/www/ood/public

  - name: Copy favicon
    copy: 
      src: favicon.ico
      dest: /var/www/ood/public

  - name: Run the pbsclient role
    include_role:
      name: pbsclient
      apply:
        become: true
    vars:
      pbs_server: scheduler

  - name: setup cyclecloud proxy
    shell: |
        if ! grep -q ccportal /opt/ood/ood-portal-generator/templates/ood-portal.conf.erb; then
          cd /root
          cat << EOF > cyclecloud_proxy
          SetEnv OOD_CC_URI "/cyclecloud"
          <Location "/cyclecloud">
            AuthType Basic
            AuthName "Open OnDemand"
            AuthBasicProvider PAM
            AuthPAMService ood
            Require valid-user

            ProxyPass http://ccportal:80/cyclecloud
            ProxyPassReverse http://ccportal:80/cyclecloud
          </Location>
        EOF
          sed -i '$e cat cyclecloud_proxy' /opt/ood/ood-portal-generator/templates/ood-portal.conf.erb
          rm cyclecloud_proxy
          /opt/ood/ood-portal-generator/sbin/update_ood_portal
          systemctl try-restart httpd24-httpd.service httpd24-htcacheclean.service
        fi

  - name: add modules for job submission
    yum: 
      name: Lmod, hwloc, numactl 

  - name: create ssh_config file
    copy:
      content: |
        Host *
          StrictHostKeyChecking=No
      dest: /etc/ssh/ssh_config

  - include_role: 
      name: ood-apps-cyclecloud
      apply: 
        become: true

  - include_role: 
      name: ood-apps-grafana
      apply: 
        become: true

  - include_role: 
      name: ood-apps-robinhood
      apply: 
        become: true

  - name: setup azcopy
    shell: |
      # Install azcopy
      cd /usr/local/bin
      wget -q https://aka.ms/downloadazcopy-v10-linux -O - | tar zxf - --strip-components 1 --wildcards '*/azcopy'
      chmod 755 /usr/local/bin/azcopy
    args:
      creates: /usr/local/bin/azcopy

  - name: Add Lustre server repo
    yum_repository:
      name: lustreserver
      description: Lustre repo
      baseurl: https://downloads.whamcloud.com/public/lustre/lustre-2.12.6/el7/patchless-ldiskfs-server/
      file: LustrePack
      enabled: yes
      gpgcheck: no

  - name: Add Lustre client repo
    yum_repository:
      name: lustreclient
      description: Lustre repo
      baseurl: https://downloads.whamcloud.com/public/lustre/lustre-2.12.6/el7/client/
      file: LustrePack
      enabled: yes
      gpgcheck: no

  - name: Add e2fs repo
    yum_repository:
      name: e2fs
      description: Lustre repo
      baseurl: https://downloads.whamcloud.com/public/e2fsprogs/latest/el7/
      file: LustrePack
      enabled: yes
      gpgcheck: no

  - name: Install lustre packages
    yum:
      name:
        - lustre-client
      state: present
    register: install_rpms

  - name: run weak-modules
    command: weak-modules --add-kernel --no-initramfs
    when: install_rpms.changed

  - name: create lustre mount directory
    file:
      path: /lustre
      state: directory

  - name: mount lustre
    mount:
      path: /lustre
      src: lustre@tcp0:/LustreFS
      opts: flock,defaults,_netdev
      state: mounted
      fstype: lustre

  - name: create ood initialiser directory
    file:
      path: /etc/ood/config/apps/dashboard/initializers
      state: directory

  - name: create ood lustre menu option
    copy:
      dest: /etc/ood/config/apps/dashboard/initializers/ood.rb
      content: |
        # /etc/ood/config/apps/dashboard/initializers/ood.rb

        OodFilesApp.candidate_favorite_paths.tap do |paths|
          paths << FavoritePath.new("/lustre", title: "Lustre")
        end

  - name: restart ood
    shell: systemctl try-restart httpd24-httpd.service httpd24-htcacheclean.service
