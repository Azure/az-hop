---
- name: Configure DNS records
  hosts: localhost
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Update DNS Resolver Forwarding rule
    command: az dns-resolver forwarding-rule create --ruleset-name "{{dns_ruleset_name}}" --name "{{item.name | map('regex_replace', '[\.]', '_') | list | join() }}" --domain-name "{{item.name}}." {{ ['--target-dns-servers port=53 ip-address'] | product(item.ips | split(',') | ansible.utils.ipaddr('address')) | map('join','=') | join(' ')}} --resource-group "{{resource_group}}"
    connection: local
    with_items: '{{dns.forwarders}}'
    when: dns.forwarders is defined

  # - name: set IP list
  #   set_fact:
  #     data: "{{'10.174.1.0/24' | ansible.utils.usable_range }}"
  
  # - name: debug
  #   debug:
  #     msg:
        # - "{{'devserver01'[:-1]}}"
        # - "{{(item | ansible.utils.usable_range).usable_ips}}" # list of usable IPs in that range
        # - "{{ item | ansible.utils.ipaddr('revdns') | regex_replace('^[0-9]+\\.', '') }}" # Reverse DNS zone for that subnet
        # - "{{ (item | ansible.utils.ipaddr('revdns') | split('.'))[1:-1]|join('.')}}"
        # - "{{ (item | ansible.utils.ipaddr('revdns') | regex_replace('^[0-9]+\\.', ''))[:-1] }}" # Reverse DNS zone for that subnet with no ending .
        # - "{{ item |  ansible.utils.usable_range }}"
        # - "{{ item | ansible.utils.ipaddr('next_usable') }}"
        # - "ip-{{ item | ansible.utils.ip4_hex }}"
        # - "{{ item | ansible.utils.ipaddr('size') }}"
        # - "{{ (('10.174.1.6'.split('.'))[4])|join('.')}}" # extract last octet of IP
#    loop: "{{'10.174.1.0/24' | ansible.utils.usable_range | selectattr(data.usable_ips) | list}}"
    # with_items:
    #   - "{{network.vnet.subnets.compute.address_prefixes}}"
      # - 10.241.235.128/25
      # - 10.0.32.0/19

  # - name: Build DNS import files
  #   template:
  #     src: ptr_records.txt.j2
  #     dest: "{{ (item | ansible.utils.ipaddr('revdns') | split('.'))[1:-1]|join('.')}}"
  #   connection: local
  #   with_items:
  #     - "{{network.vnet.subnets.compute.address_prefixes}}"

  # - name: Update DNS PTR for reverse resolution
  #   command: |
  #     az network private-dns zone import -g "{{resource_group}}" -n "{{ (item | ansible.utils.ipaddr('revdns') | split('.'))[1:-1]|join('.')}}" -f "{{ (item | ansible.utils.ipaddr('revdns') | split('.'))[1:-1]|join('.')}}"
  #   connection: local
  #   with_items:
  #     - "{{network.vnet.subnets.compute.address_prefixes}}"

