---
- name: Configure Jumpbox
  hosts: jumpbox
  become: true
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'
  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:
  - name: "Ensure SSH AllowTcpForwarding is enabled"
    lineinfile:
        state: present
        dest: /etc/ssh/sshd_config
        regexp: "^#AllowTcpForwarding|^AllowTcpForwarding"
        line: 'AllowTcpForwarding yes'
  - name: restart sshd
    service:
      name: sshd
      state: restarted
  - name: Update Packages
    include_role:
      name: pkg_update

- name: Join AD domain or create local users, mount shared home
  hosts: scheduler, ondemand, grafana
  become: true
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  # use the private DNS when defined
  - name: setup private domain
    block:
      - name: setup private domain if not set in resolv.conf (for CentOS and AlmaLinux)
        shell: |
          if ! grep -q {{private_dns.name}} /etc/resolv.conf; then
            sed -i 's/search /search {{private_dns.name}} /' /etc/resolv.conf
            # Stop NetworkManager overwriting /etc/resolv.conf
            cat > /etc/NetworkManager/conf.d/90-dns-none.conf << EOF
            [main]
            dns=none
          EOF
          fi
        when: ansible_distribution in ['CentOS', 'AlmaLinux']

      - name: setup private domain if not set in resolv.conf (for Ubuntu)
        shell: |
          if ! grep -q {{private_dns.name}} /etc/resolv.conf; then
            sed -i 's/search /search {{private_dns.name}} /' /etc/resolv.conf
          fi
        when: ansible_distribution in ['Ubuntu']
    when: 
      - private_dns.create | default(false)

  - name: debug
    debug:
      msg:
      - '{{ anf_home_ip }}:/{{ anf_home_path }}'
      - '{{ homedir_mountpoint }}'
      - '{{ anf_home_opts }}'

  - name: Mount home NFS volume
    include_role:
      name: nfs_mount
    vars:
      nfs_source: '{{ anf_home_ip }}:/{{ anf_home_path }}'
      nfs_path: '{{ homedir_mountpoint }}'
      nfs_mount_opts: '{{ anf_home_opts }}'

  - name: Disable SELinux
    selinux:
      state: disabled
    register: selinux
    when: ansible_distribution == 'CentOS' or ansible_distribution == 'AlmaLinux'

  - name: reboot 
    reboot:
    when: selinux.reboot_required | default(false)

  - name: Domain Join
    block:
    - name: Read Password from KV
      command: az keyvault secret show --vault-name {{key_vault}} -n {{ad_join_user}}-password --query "value" -o tsv
      delegate_to: localhost
      connection: local
      register: password
      become: false
      run_once: true

    - name: Join domain
      include_role:
        name: domain_join
      vars:
        domain_admin: "{{ad_join_user}}"
        domain_password: "{{password.stdout}}"
        domain: "{{domain_name}}"
        domain_join_ou: "{{domain.domain_join_ou | default('')}}"

    when: (authentication.user_auth | default('ad')) == "ad"

  - name: Update ANF chmod mode
    file:
      path: '{{homedir_mountpoint}}'
      state: directory
      mode: '0755'
    run_once : true


- name: Generate SSH keys on logon if not exists
  hosts: ondemand, scheduler
  become: true
  gather_facts: no
  vars_files:
    - '{{global_config_file}}'

  tasks:
  - name: Wait 300 seconds for the nodes to be ready
    wait_for_connection:
      timeout: 300
  - name: Gather facts for first time
    setup:

  - name: create /etc/profile.d/gen_sshkey.sh if not exists
    shell: |
      cat <<EOF >/etc/profile.d/gen_sshkey.sh
      #!/bin/sh
      # Only do this for uid >= 1000
      if [ \$(id -u) -le 1000 ]; then
        return
      fi
      if [ ! -f  ~/.ssh/id_rsa.pub ] ; then
        ssh-keygen -q -t rsa -N '' -f ~/.ssh/id_rsa <<<y >/dev/null 2>&1
        cat ~/.ssh/id_rsa.pub >> ~/.ssh/authorized_keys
        chmod 644 ~/.ssh/authorized_keys
      fi
      EOF
      chmod 644 /etc/profile.d/gen_sshkey.sh
    args: 
      creates: /etc/profile.d/gen_sshkey.sh

  - name: add pam_mkhomedir to pam to create users home directory if not exist (Ubuntu only)
    lineinfile:
      path: /etc/pam.d/common-session
      line: 'session  required  pam_mkhomedir.so skel=/etc/skel'
      state: present
      create: yes
    when: ansible_distribution == 'Ubuntu'
