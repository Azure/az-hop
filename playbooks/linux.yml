---
- name: Join AD domain and mount anf-home
  hosts: jumpbox, scheduler, ondemand
  become: true

  tasks:
  - name: Install dependencies
    yum:
      name: epel-release, sssd, realmd, oddjob, oddjob-mkhomedir, adcli, samba-common, samba-common-tools, krb5-workstation, openldap-clients, policycoreutils-python, nfs-utils 

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Restart service dbus
    service:
      name: dbus
      state: restarted 

  - name: Restart service systemd-logind
    service:
      name: systemd-logind
      state: restarted

  - name: create dhclient config
    copy:
      content: "supersede domain-name-servers {{ ad_dns }};\nappend domain-name-servers 168.63.129.16;"
      dest: "/etc/dhcp/dhclient.conf"

  - name: Restart service network
    service:
      name: NetworkManager
      state: restarted

  - name: Creates home directory mountpoint
    file:
      path: /anfhome
      state: directory
      mode: 0755
  - name: Mount an NFS volume
    mount:
      src: '{{ anf_home_ip }}:/{{ anf_home_path }}'
      path: /anfhome
      opts: rw,sync,hard,intr
      state: mounted
      fstype: nfs

  - name: Update ANF chmod mode
    file:
      path: /anfhome
      state: directory
      mode: '0755'
    run_once : true

  - name: check if sssd.conf file exists
    stat: 
      path: /etc/sssd/sssd.conf
    register: sssd_conf

  - name: Join AD domain
    shell: echo "{{ ad_join_password }}" | realm join -U {{ ad_join_user }} {{ ad_join_domain }}
    when: sssd_conf.stat.exists == false

  - name: configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: '^use_fully_qualified_names'
      line: 'use_fully_qualified_names = False'

  - name: configure sssd
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: '^ldap_id_mapping'
      line: 'ldap_id_mapping = False'

  - name: Restart sssd
    service:
      name: sssd 
      state: restarted

  - name: init user context for hugo
    command: ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
    become_user: hugo 
    run_once: yes
    args: 
      creates: /anfhome/hugo/.ssh/id_rsa

  - name: Copy file with owner and permissions
    copy:
      src: /anfhome/hugo/.ssh/id_rsa.pub 
      dest: /anfhome/hugo/.ssh/authorized_keys
      remote_src: yes
      mode: '0600'
      owner: hugo
      group: "domain users" 

  - name: init user context for paul
    command: ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
    become_user: paul
    run_once: yes
    args: 
      creates: /anfhome/paul/.ssh/id_rsa

  - name: Copy file with owner and permissions
    copy:
      src: /anfhome/paul/.ssh/id_rsa.pub
      dest: /anfhome/paul/.ssh/authorized_keys
      remote_src: yes
      mode: '0600'
      owner: paul 
      group: "domain users"

  - name: init user context for xavier
    command: ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
    become_user: xavier
    run_once: yes
    args: 
      creates: /anfhome/xavier/.ssh/id_rsa
 
  - name: Copy file with owner and permissions
    copy:
      src: /anfhome/xavier/.ssh/id_rsa.pub
      dest: /anfhome/xavier/.ssh/authorized_keys
      remote_src: yes
      mode: '0600'
      owner: xavier
      group: "domain users"
