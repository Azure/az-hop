---
- name: Join AD domain and mount anf-home
  hosts: jumpbox, scheduler, ondemand
  become: true

  tasks:
  - name: Install dependencies
    yum:
      name: epel-release, sssd, realmd, oddjob, oddjob-mkhomedir, adcli, samba-common, samba-common-tools, krb5-workstation, openldap-clients, policycoreutils-python, nfs-utils 

  - name: Disable SELinux
    selinux:
      state: disabled

  - name: Restart service dbus
    service:
      name: dbus
      state: restarted 

  - name: Restart service systemd-logind
    service:
      name: systemd-logind
      state: restarted

  - name: create dhclient config
    copy:
      content: "supersede domain-name-servers {{ ad_dns }};\nappend domain-name-servers 168.63.129.16;"
      dest: "/etc/dhcp/dhclient.conf"

  - name: Restart service network
    service:
      name: NetworkManager
      state: restarted

  - name: Creates home directory mountpoint
    file:
      path: /anfhome
      state: directory
      mode: 0755

  - name: Mount an NFS volume
    mount:
      src: '{{ anf_home_ip }}:/{{ anf_home_path }}'
      path: /anfhome
      opts: rw,sync,hard,intr
      state: mounted
      fstype: nfs

  - name: Update ANF chmod mode
    file:
      path: /anfhome
      state: directory
      mode: '0755'
    run_once : true

  - name: Join AD domain
    shell: echo "{{ ad_join_password }}" | realm join -v -U {{ ad_join_user }} {{ ad_join_domain }}
    args:
      creates: /etc/sssd/sssd.conf

  - name: configure sssd - use_fully_qualified_names
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: '^use_fully_qualified_names'
      line: 'use_fully_qualified_names = False'

  - name: configure sssd - ldap_id_mapping
    lineinfile:
      path: /etc/sssd/sssd.conf
      regexp: '^ldap_id_mapping'
      line: 'ldap_id_mapping = False'

  - name: Restart sssd
    service:
      name: sssd 
      state: restarted

  # - name: Include users into the 'users' variable
  #   include_vars:
  #     file: users.yml

  # - name: init user context for {{item.name}}
  #   command: ssh-keygen -t rsa -f ~/.ssh/id_rsa -q -N ""
  #   become_user: '{{item.name}}'
  #   run_once: yes
  #   args: 
  #     creates: /anfhome/{{item.name}}/.ssh/id_rsa
  #   with_items: "{{users}}"

  # - name: Copy file with owner and permissions
  #   copy:
  #     src: /anfhome/{{item.name}}/.ssh/id_rsa.pub 
  #     dest: /anfhome/{{item.name}}/.ssh/authorized_keys
  #     remote_src: yes
  #     mode: '0600'
  #     owner: '{{item.name}}'
  #     group: "domain users" 
  #     force: no
  #   with_items: "{{users}}"
