{
    "$schema": "http://json-schema.org/draft-06/schema#",
    "$ref": "#/definitions/az-hop",
    "definitions": {
        "az-hop": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "project_name": {
                    "description": "Name of az-hop project",
                    "type": "string"
                },
                "location": {
                    "description": "azure location name as returned by the command : az account list-locations -o table",
                    "type": "string"
                },
                "resource_group": {
                    "description": "Name of the resource group to create all resources",
                    "type": "string"
                },
                "optout_telemetry": {
                    "description": "If set to true, will disable telemetry for azhop. See https://azure.github.io/az-hop/deploy/telemetry.html",
                    "type": "boolean"
                },
                "use_existing_rg": {
                    "description": "If using an existing resource group set to true. Default is false. When using an existing resource group make sure the location match the one of the existing resource group",
                    "type": "boolean"
                },
                "tags": {
                    "description": "Additional tags to be added on the Resource Group",
                    "$ref": "#/definitions/Tags"
                },
                "anf": {
                    "description": "Define an Azure Netapp Files (ANF) account, single pool and volume. If not present, assume that there is an existing NFS share for the users home directory",
                    "$ref": "#/definitions/Anf"
                },
                "azurefiles": {
                    "description": "For small deployments you can use Azure Files instead of ANF for the home directory",
                    "$ref": "#/definitions/Azurefiles"
                },
                "mounts": {
                    "description": "Mounts will be listed in the Files menu of the OnDemand portal and automatically mounted on all compute nodes and remote desktop nodes",
                    "$ref": "#/definitions/Mounts"
                },
                "admin_user": {
                    "description": "Name of the admin account",
                    "type": "string"
                },
                "key_vault_readers": {
                    "description": "Identity (object id) to grant read access to az-hop key vault (optional)",
                    "type": "string"
                },
                "network": {
                    "$ref": "#/definitions/Network"
                },
                "locked_down_network": {
                    "description": "When working in a locked down network, uncomment and fill out this section",
                    "$ref": "#/definitions/LockedDownNetwork"
                },
                "azure_key_vault": {
                    "description": "Key vault configuration",
                    "$ref": "#/definitions/KeyVault"
                },
                "azure_storage_account": {
                    "description": "Storage account configuration",
                    "$ref": "#/definitions/StorageAccount"
                },
                "linux_base_image": {
                    "description": "Can be either an image reference or an image_id from the image registry or a custom managed image",
                    "type": "string"
                },
                "linux_base_plan": {
                    "description": "linux image plan if required, format is publisher:product:name",
                    "type": "string"
                },
                "windows_base_image": {
                    "description": "Can be either an image reference or an image_id from the image registry or a custom managed image",
                    "type": "string"
                },
                "jumpbox": {
                    "description": "Jumpbox VM configuration, only needed when deploying thru a public IP and without a configured deployer VM",
                    "$ref": "#/definitions/Jumpbox"
                },
                "deployer": {
                    "description": "Deployer VM configuration",
                    "$ref": "#/definitions/Deployer"
                },
                "ad": {
                    "description": "Active directory VM configuration",
                    "$ref": "#/definitions/az-hopAd"
                },
                "ondemand": {
                    "description": "On demand VM configuration",
                    "$ref": "#/definitions/Ondemand"
                },
                "grafana": {
                    "description": "Grafana VM configuration",
                    "$ref": "#/definitions/Grafana"
                },
                "scheduler": {
                    "description": "Scheduler VM configuration",
                    "$ref": "#/definitions/Scheduler"
                },
                "cyclecloud": {
                    "description": "CycleCloud VM configuration",
                    "$ref": "#/definitions/Cyclecloud"
                },
                "lustre": {
                    "description": "Create a Lustre cluster in the environment (optional).",
                    "$ref": "#/definitions/Lustre"
                },
                "users": {
                    "description": "List of users to be created on this environment",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                },
                "usergroups": {
                    "description": "List of user groups to be created",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Usergroup"
                    }
                },
                "domain": {
                    "description": "Domain definition",
                    "$ref": "#/definitions/Domain"
                },
                "cvmfs_eessi": {
                    "description": "Enable CernVM virtual file system for European Environment for Scientific Software Installations",
                    "$ref": "#/definitions/CVMFS"
                },
                "queue_manager": {
                    "description": "",
                    "type": "string"
                },
                "slurm": {
                    "description": "scheduler to be installed and configured (openpbs, slurm)",
                    "$ref": "#/definitions/Slurm"
                },
                "enroot": {
                    "description": "Enroot settings",
                    "$ref": "#/definitions/Enroot"
                },
                "database": {
                    "description": "If using an existing Managed MariaDB instance for SLURM accounting, specify these values",
                    "$ref": "#/definitions/Database"
                },
                "authentication": {
                    "description": "# Authentication configuration for ondemand portal. Default is basic authentication. For oidc authentication, store the OIDCClient secret as a secret named <oidc-client-id>-password in the keyvault used by az-hop",
                    "$ref": "#/definitions/Authentication"
                },
                "images": {
                    "description": "List of images to be defined",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Image"
                    }
                },
                "bastion": {
                    "description": "Create a Bastion in the bastion subnet  (optional).",
                    "$ref": "#/definitions/Bastion"
                },
                "vpn_gateway": {
                    "description": "Create a VPN Gateway in the gateway subnet (optional).",
                    "$ref": "#/definitions/VpnGateway"
                },
                "image_gallery": {
                    "description": "Create the shared image gallery to store custom VM images.",
                    "$ref": "#/definitions/ImageGallery"
                },
                "autoscale": {
                    "description": "Autoscale default settings for all queues, can be overriden on each queue depending on the VM type if needed",
                    "$ref": "#/definitions/Autoscale"
                },
                "queues": {
                    "description": "List of queues (node arrays in CycleCloud)",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Queue"
                    }
                },
                "applications": {
                    "description": "Configure applications in OnDemand web portal",
                    "$ref": "#/definitions/Applications"
                },
                "dns": {
                    "description": "Specify DNS forwarders available in the network",
                    "$ref": "#/definitions/dns"
                },
                "log_analytics": {
                    "description": "Create a log analytics workspace to enable monitoring and alerting",
                    "$ref": "#/definitions/logAnalytics"
                },
                "compute_vm_identity": {
                    "description": "Create a user-assigned managed identity that will be applied to the compute VMs",
                    "$ref": "#/definitions/computeVMidentity"
                },                
                "monitoring": {
                    "description": "If set to true, it will install the Azure Monitor Agent on the infrastructure VMs deployed by az-hop. If set to false, it is assumed that the agent is installed by policy.",
                    "$ref": "#/definitions/monitoring"
                },                
                "alerting": {
                    "description": "If set to true, it will create alert rules associated with az-hop. Enablement of alerting will require the specification of an admin email to send alerts to.",
                    "$ref": "#/definitions/alerting"
                },
                "nat_gateway": {
                    "description": "Create a NAT Gateway to enable outbound connectivity",
                    "$ref": "#/definitions/natgateway"
                },
                "private_dns": {
                    "description": "Configuration of a private DNS zone to create",
                    "$ref": "#/definitions/private_dns"
                }
            },
            "required": [
                "admin_user",
                "cyclecloud",
                "location",
                "mounts",
                "network",
                "queue_manager",
                "queues",
                "resource_group",
                "scheduler",
                "usergroups",
                "users"
            ],
            "title": "az-hop"
        },
        "private_dns": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {"type": "boolean", "default": false},
                "name": {"type": "string"},
                "registration_enabled": {"type": "boolean", "default": false}
            },
            "required": [ "create", "name" ],
            "title": "privateDNSZone"
        },
        "logAnalytics": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {"type": "boolean", "default": false},
                "resource_group": {"type": "string"},
                "name": {"type": "string"},
                "subscription_id": {"type": "string"}
            },
            "required": [ "create" ],
            "title": "logAnalytics"
        },
        "computeVMidentity": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {"type": "boolean", "default": false},
                "name": {
                    "type": "string",
                    "maxLength": 24, 
                    "pattern": "^[a-zA-Z0-9-]+$"},
                "resource_group": {"type": "string"}
            },
            "required": [ "create" ],
            "title": "computeVMidentity"
        },
        "monitoring": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "install_agent": {"type": "boolean", "default": true, "deprecated": true },
                "azure_monitor_agent": {"type": "boolean", "default": false },
                "telegraf": {"type": "boolean", "default": true },
                "grafana": {"type": "boolean", "default": true },
		"idle_threshold": {"type": "string", "pattern": "^(10|20|30|40|50|60|70|80|90|100)$", "default": "70"},
		"iowait_threshold": {"type": "string", "pattern": "^(10|20|30|40|50|60|70|80|90|100)$", "default": "40"},
		"mem_threshold": {"type": "string", "pattern": "^(10|20|30|40|50|60|70|80|90|100)$", "default": "30"}
            },
            "title": "monitoring"
        },
        "alerting": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {"type": "boolean" },
                "admin_email": { "type": "string" },
                "local_volume_threshold": { "type": "integer", "maximum": 100, "minimum": 1 }
            },
            "required": [
                "enabled"
            ],
            "title": "alerting"
        },
        "natgateway" : {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {"type": "boolean", "default": false },
                "name": { "type": "string" }
            },
            "required": [
                "create"
            ],
            "title": "NAT Gateway"
        },
        "az-hopAd": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": {
                    "type": "string",
                    "description": "The size of VM to use when deploying a new active directory domain as part of AZHOP"
                },
                "name": { "type": "string", "default": "ad", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" },
                "ha_name": { "type": "string", "default": "ad2", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" },
                "hybrid_benefit": {
                    "type": "boolean",
                    "description": "Will hybrid benefit be used on the vm that is running the active directory domain vm being deployed for az-hop.",
                    "default": false
                },
                "high_availability": {
                    "type": "boolean",
                    "description": "Should a second domain controller be deployed when include a new active directory with the az-hop deployment.",
                    "default": false
                }
            },
            "required": [],
            "title": "az-hopAd"
        },
        "Anf": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "type": "boolean", "default": true
                },
                "homefs_size_tb": {
                    "description": "Size of the ANF pool and unique volume (min: 4TB, max: 100TB)",
                    "maximum": 100,
                    "minimum": 4,
                    "type": "integer"
                },
                "homefs_service_level": {
                    "description": "Service level of the ANF volume, can be: Standard, Premium, Ultra",
                    "enum": ["Standard", "Premium", "Ultra"],
                    "type": "string"
                },
                "dual_protocol": {
                    "description": "Whether to enable SMB support. false by default",
                    "type": "boolean",
                    "default": false
                },
                "alert_threshold": {
                    "description": "If alerting is enabled, this value will be used to determine when to trigger alerts ",
                    "default": 80,
                    "maximum": 100,
                    "minimum": 1,
                    "type": "integer"
                }
            },
            "required": [
                "create",
                "homefs_service_level",
                "homefs_size_tb"
            ],
            "title": "Anf"
        },
        "Azurefiles": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "type": "boolean"
                },
                "size_gb": {
                    "type": "integer"
                }
            },
            "required": [
                "create",
                "size_gb"
            ],
            "title": "Azurefiles"
        },
        "Domain": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "The domain name that the Az-Hop infrastructure will use.",
                    "default": "hpc.azure"
                },
                "domain_join_ou": {
                    "type": "string",
                    "description": "The domain OU where new AZ-HOP computer objects will be added to the domain."
                },
                "use_existing_dc": {
                    "type": "boolean",
                    "description": "Flag for identifying whether an existing Active Directory should be used or if an AD controller should be deployed with AZ-HOP",
                    "default": false
                },
                "domain_join_user": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                        "username": {
                            "type": "string",
                            "description": "The username of the account that will be used to perform domain join activities."
                        },
                        "password_key_vault_name": {
                            "type": "string",
                            "description": "The name of the keyvault where the domain join user's password will be stored as a secret. The identity being used for the deployment will need to have secret read on this vault."
                        },
                        "password_key_vault_resource_group_name": {
                            "type": "string",
                            "description": "The resource group name where the key vault holding the domain join user secret is deployed."
                        },
                        "password_key_vault_secret_name": {
                            "type": "string",
                            "description": "The name of the secret for the domain join user password."
                        }
                    }
                },
                "existing_dc_details": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties":{
                        "domain_controller_names": {
                            "type": "array",
                            "description": "A list of hostnames for the domain controllers that will be used as a target for az-hop domain activities."
                        },
                        "domain_controller_ip_addresses": {
                            "type": "array",
                            "description": "A list of IP addresses for the existing domain controllers for use in ASG and NSG rules allowing domain access."
                        },
                        "private_dns_servers": {
                            "type": "array",
                            "description": "A list of IP addresses for the existing DNS servers where the AD domain records exist."
                        }
                    }
                }
            },
            "required": [
            ],
            "title": "Domain"
        },
        "Applications": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "bc_codeserver": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_jupyter": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_rstudio": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_ansys_workbench": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_vmd": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_paraview": {
                    "$ref": "#/definitions/ood_app"
                },
                "bc_vizer": {
                    "$ref": "#/definitions/ood_app"
                }
            },
            "required": [
            ],
            "title": "Applications"
        },
        "ood_app": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "title": "ood_app"
        },
        "Authentication": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "user_auth": {
                    "type": "string",
                    "enum": ["local", "ad"],
                    "default": "ad"
                },
                "httpd_auth": {
                    "type": "string",
                    "enum": ["basic", "oidc"],
                    "default": "basic"
                },
                "user_map_match": { "type": "string" },
                "user_map_cmd": { "type": "string" },
                "ood_auth_openidc": { 
                    "$ref": "#/definitions/openidc"
                 }
            },
            "required": [
                "httpd_auth"
            ],
            "title": "Authentication"
        },
        "openidc": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "OIDCProviderMetadataURL": { "type": "string" },
                "OIDCClientID": { "type": "string" },
                "OIDCRemoteUserClaim": { "type": "string" },
                "OIDCScope": { "type": "string" },
                "OIDCPassIDTokenAs": { "type": "string" },
                "OIDCPassRefreshToken": { "type": "string" },
                "OIDCPassClaimsAs": { "type": "string" }
            },
            "required": [
                "OIDCProviderMetadataURL",
                "OIDCClientID",
                "OIDCRemoteUserClaim",
                "OIDCScope",
                "OIDCPassIDTokenAs",
                "OIDCPassRefreshToken",
                "OIDCPassClaimsAs"
            ],
            "title": "openidc"
        },
        "Bastion": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "type": "boolean", "default": false
                }
            },
            "required": [
                "create"
            ],
            "title": "Bastion"
        },
        "VpnGateway": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "type": "boolean", "default": false
                }
            },
            "required": [
                "create"
            ],
            "title": "VpnGateway"
        },
        "Autoscale": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "idle_timeout": {
                    "description": "Idle time in seconds before shutting down VMs - default to 1800 like in CycleCloud",
                    "type": "integer",
                    "default": 1800
                }
            },
            "required": [
                "idle_timeout"
            ],
            "title": "Autoscale"
        },
        "ImageGallery": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "type": "boolean",
                    "default": false
                }
            },
            "required": [
                "create"
            ],
            "title": "ImageGallery"
        },
        "Cyclecloud": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": { "type": "string" },
                "name": { "type": "string", "default": "ccportal", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" },
                "version": { "type": "string" },
                "image": {
                    "description": "Can be either an image reference or an image_id from the image registry or a custom managed image",
                    "type": "string"
                },
                "plan": {
                    "description": "Image plan specification (when needed for the image). Terms must be accepted prior to deployment",
                    "type": "string"
                }
            },
            "required": [
                "vm_size"
            ],
            "title": "Cyclecloud"
        },
        "Database": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name of the database resource to be created"
                },
                "user": {
                    "type": "string",
                    "description": "Admin user of the database for which the password will be retrieved from the azhop keyvault"
                },
                "fqdn": {
                    "type": "string",
                    "description": "FQDN of the managed instance, when using an existing one"
                },
                "ip": {
                    "type": "string",
                    "description": "IP of the managed private endpoint if the FQDN is not registered in a private DNS"
                }
            },
            "title": "Database"
        },
        "Image": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "publisher": {
                    "$ref": "#/definitions/Project"
                },
                "offer": {
                    "type": "string"
                },
                "sku": {
                    "type": "string"
                },
                "hyper_v": {
                    "$ref": "#/definitions/HyperV"
                },
                "os_type": {
                    "$ref": "#/definitions/OSType"
                },
                "version": {
                    "type": "number"
                }
            },
            "required": [
                "hyper_v",
                "name",
                "offer",
                "os_type",
                "publisher",
                "sku",
                "version"
            ],
            "title": "Image"
        },
        "Jumpbox": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string", "default": "jumpbox", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$"
                },
                "ssh_port": {
                    "description": "Defaults to 22. Change this to, e.g., 2222, if security policies (like 'zero trust') in your tenant automatically block access to port 22 from the internet",
                    "type": "integer"
                }
            },
            "required": [
                "vm_size"
            ],
            "title": "Jumpbox"
        },
        "Deployer": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": {
                    "type": "string"
                },
                "name": {
                    "type": "string", "default": "deployer", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$"
                },
                "ssh_port": {
                    "description": "Defaults to 22. Change this to, e.g., 2222, if security policies (like 'zero trust') in your tenant automatically block access to port 22 from the internet",
                    "type": "integer"
                }
            },
            "required": [
                "vm_size"
            ],
            "title": "Deployer"
        },
        "Lustre": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create": {
                    "description": "Create cluster",
                    "type": "boolean",
                    "default": false
                },
                "sku": {
                    "description": "The Lustre tier to use",
                    "enum": ["AMLFS-Durable-Premium-40", "AMLFS-Durable-Premium-120", "AMLFS-Durable-Premium-250", "AMLFS-Durable-Premium-500"],
                    "type": "string"
                },
                "capacity": {
                    "description": "Size of the Lustre file system in TB",
                    "type": "integer"
                },
                "hsm": {
                    "description": "Use existing storage account for the archive (optional). If not included, will use az-hop storage account.",
                    "$ref": "#/definitions/HSM"
                }
            },
            "required": [
                "create"
            ],
            "title": "Lustre"
        },
        "HSM": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "storage_account": {
                    "type": "string"
                },
                "storage_container": {
                    "type": "string"
                }
            },
            "required": [
                "storage_account",
                "storage_container"
            ],
            "title": "HSM"
        },
        "LockedDownNetwork": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enforce": { "type": "boolean", "default": false },
                "public_ip": { "type": "boolean", "default": true },
                "grant_access_from": { "type": "array", "items": { "type": "string" } }
            },
            "required": [
                "public_ip"
            ],
            "title": "LockedDownNetwork"
        },
        "KeyVault": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string" 
                }
            },
            "title": "KeyVault"
        },
        "StorageAccount": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string" 
                }
            },
            "title": "StorageAccount"
        },
        "Mounts": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
                "home": {
                    "$ref": "#/definitions/Home"
                }
            },
            "required": [
                "home"
            ],
            "title": "Mounts"
        },
        "Home": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "description": "'existing' or 'anf' or 'azurefiles', default: 'existing'.",
                    "enum": ["anf", "azurefiles", "existing"],
                    "type": "string"
                },
                "mountpoint": {
                    "type": "string"
                },
                "server": {
                    "type": "string"
                },
                "export": {
                    "type": "string"
                },
                "options": {
                    "type": "string"
                }
            },
            "required": [
                "export",
                "mountpoint",
                "server"
            ],
            "title": "Home"
        },
        "Network": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "create_nsg": { "type": "boolean", "default": true },
                "vnet": { "$ref": "#/definitions/Vnet" },
                "peering": {
                    "type": "array",
                    "items": {
                    "$ref": "#/definitions/Peering"
                    }
                },
                "asg": { "$ref": "#/definitions/asgMap" }
            },
            "required": [
                "vnet"
            ],
            "title": "Network"
        },
        "asgMap": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "resource_group": { "type": "string", "description": "name of the resource group containing the ASG. Default to the resource group containing azhop resources" },
                "names": { "$ref": "#/definitions/asgMappingNames", "description": "list of ASG names mapping to the one defined in az-hop" }
            },
            "required": [
                "resource_group",
                "names"
            ],
            "title": "ASG Mapping"
        },
        "asgMappingNames": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "asg-ssh": { "type": "string" },
                "asg-rdp": { "type": "string" },
                "asg-jumpbox": { "type": "string" },
                "asg-ad": { "type": "string" },
                "asg-ad-client": { "type": "string" },
                "asg-lustre-client": { "type": "string" },
                "asg-sched": { "type": "string" },
                "asg-cyclecloud": { "type": "string" },
                "asg-cyclecloud-client": { "type": "string" },
                "asg-nfs-client": { "type": "string" },
                "asg-telegraf": { "type": "string" },
                "asg-grafana": { "type": "string" },
                "asg-ondemand": { "type": "string" },
                "asg-deployer": { "type": "string" },
                "asg-mariadb-client": { "type": "string" }
            },
            "title": "ASG Mapping Names"
        },
        "dns": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "forwarders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/dnsForwarders"
                    }
                }
            },
            "required": [ "forwarders" ],
            "title": "DNS"
        },
        "dnsForwarders" : {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name" : {
                    "description": "Domain name to be resolved by the forwarder",
                    "type": "string"
                },
                "ips" : {
                    "description": "Comma delimited list of the IP addresses of the forwarder",
                    "type": "string"
                }
            },
            "required": [ "name", "ips" ],
            "title": "DNS Forwarders"
        },
        "Peering" : {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vnet_name": {
                    "description": "VNET Name to Peer to",
                    "type": "string"
                },
                "vnet_resource_group": {
                    "description": "Resource Group of the VNET to peer to",
                    "type": "string"
                },
                "vnet_allow_gateway": {
                    "description": "Allow gateway transit (Optional, default: true)",
                    "type": "boolean"
                }
            },
            "required": [
                "vnet_name",
                "vnet_resource_group"
            ],
            "title": "Vnet Peering"
        },
        "Vnet": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": { "type": "string" },
                "id": { "type": "string" },
                "address_space": { "type": "string" },
                "subnets": { "$ref": "#/definitions/Subnets" },
                "tags": { "$ref": "#/definitions/Tags" }
            },
            "required": [
                "subnets"
            ],
            "title": "Vnet"
        },
        "Subnets": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "frontend": {
                    "$ref": "#/definitions/subnetClass"
                },
                "admin": {
                    "$ref": "#/definitions/subnetClass"
                },
                "netapp": {
                    "$ref": "#/definitions/subnetClass"
                },
                "ad": {
                    "$ref": "#/definitions/subnetClass"
                },
                "compute": {
                    "$ref": "#/definitions/subnetClass"
                },
                "bastion": {
                    "$ref": "#/definitions/subnetClass"
                },
                "lustre": {
                    "$ref": "#/definitions/subnetClass"
                },
                "gateway": {
                    "$ref": "#/definitions/subnetClass"
                },
                "outbounddns": {
                    "$ref": "#/definitions/subnetClass"
                }
            },
            "required": [
                "admin",
                "compute",
                "frontend"
            ],
            "title": "Subnets"
        },
        "subnetClass": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "address_prefixes": {
                    "type": "string"
                },
                "create": {
                    "type": "boolean", "default": true
                }
            },
            "required": [
            ],
            "title": "subnetClass"
        },
        "Ondemand": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": { "type": "string" },
                "name": { "type": "string", "default": "ondemand", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" },
                "generate_certificate": { "type": "boolean", "default": true },
                "fqdn": { "type": "string" },
                "whitelist_path": { "type": "string" },
                "file_upload_max": { "type": "integer" },
                "file_upload_allowed_extensions": { "type": "array" }
            },
            "required": [
                "vm_size"
            ],
            "title": "Ondemand"
        },
        "Scheduler": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": { "type": "string" },
                "name": { "type": "string", "default": "scheduler", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" }
            },
            "required": [
                "vm_size"
            ],
            "title": "Scheduler"
        },
        "Grafana": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "vm_size": { "type": "string" },
                "name": { "type": "string", "default": "grafana", "maxLength": 15, "pattern": "^([0-9a-z\\-]+)$" }
            },
            "required": [
                "vm_size"
            ],
            "title": "Grafana"
        },
        "Queue": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "anyOf": [
                        {
                            "description": "Name of queue (max. 8 characters, lowercase). This is to leave space for node suffix, as hostnames are limited to 15 characters by domain join and NETBIOS constraints.",
                            "maxLength": 9,
                            "pattern": "^([0-9a-z\\-]+)$",
                            "type": "string"
                        },
                        {
                            "description": "Name of queue (special names).",
                            "enum": [
                                "largeviz3d",
                                "viz"
                            ],
                            "type": "string"
                        }
                    ]
                },
                "vm_size": {
                    "description": "Azure VM instance type, e.g. Standard_F2s_v2",
                    "type": "string"
                },
                "max_core_count": {
                    "description": "Maximum number of cores that can be allocated for the entire queue.",
                    "type": "integer"
                },
                "max_count": {
                    "description": "Maximum number of nodes that can be allocated for the entire queue.",
                    "type": "integer"
                },
                "image": {
                    "description": "Can be either an image reference or an image_id from the image registry or a custom managed image",
                    "type": "string"
                },
                "plan": {
                    "description": "Image plan specification (when needed for the image). Terms must be accepted prior to deployment",
                    "type": "string"
                },
                "EnableAcceleratedNetworking": {
                    "description": "Whether to enable AccelNet. Defaults to false",
                    "type": "boolean"
                },
                "spot": {
                    "description": "Whether to use spot instances. Defaults to false",
                    "type": "boolean"
                },
                "ColocateNodes": {
                    "description": "Whether to create placement groups (SLURM only). Defaults to true",
                    "type": "boolean"
                },
                "idle_timeout": {
                    "description": "Idle time (seconds) before shutting down VMs. Choose lower than autoscale.idle_timeout",
                    "type": "integer"
                },
                "MaxScaleSetSize": {
                    "description": "Maximum number of VMs in a scale set (default: 100). Lowering may make it easier to provision VMs from Azure, increasing beyond 100 requires raising Azure limit via support ticket.",
                    "type": "integer"
                },
                "EphemeralOSDisk": {
                    "description": "Use ephemeral boot disk for VM, if supported. Defaults to false",
                    "type": "boolean",
                    "default": false
                },
                "max_hours": {
                    "description": "Maximum session duration. 0 means 'no limit'.",
                    "type": "integer"
                },
                "min_hours": {
                    "description": "Minimum session duration",
                    "type": "integer"
                },
                "type": {
                    "description": "Type of queue - mandatory for remoteviz nodes",
                    "enum": [
                        "remoteviz",
                        "compute"
                    ],
                    "type": "string"
                },
                "description": {
                    "description": "Description of the queue that will appear in the node selection choice of the ood portal",
                    "type": "string"
                },
                "shareable": {
                    "description": "Whether the remote visualization node can be shared by multiple users. Defaults to false",
                    "type": "boolean",
                    "default": false
                },
                "location" : {
                    "description": "Azure Location of the queue. Only used it for multi-region scenario. Defaults to the location of the az-hop deployment",
                    "type": "string"
                },
                "subnet" : {
                    "description": "Subnet of the queue. Only used and required for multi-region scenario. Format for the remove subnet is <resource_group>/<vnet_name>/<subnet_name> Defaults to the subnet of the az-hop deployment",
                    "type": "string"
                },
                "healthchecks": {
                    "description": "Whether to enable healthchecks. Defaults to true",
                    "type": "boolean",
                    "default": true
                }
            },
            "required": [
                "image",
                "name",
                "vm_size"
            ],
            "title": "Queue"
        },
        "CVMFS": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enabled": {
                    "type": "boolean"
                }
            },
            "required": [
                "enabled"
            ],
            "title": "CVMFS"
        },
        "Slurm": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "accounting_enabled": {
                    "type": "boolean"
                },
                "cluster_name": {
                    "description": "Name of slurm cluster for accounting, defaults to 'slurm'. WARNING: changing this value on a running cluster will cause slurmctld to fail to start. This is a safety check to prevent accounting errors. To override, remove /var/spool/slurmd/clustername .",
                    "type": "string"
                },
                "slurm_version": {
                    "type": "string",
                    "enum": ["20.11.9", "22.05.3", "22.05.9", "23.02.5"],
                    "default": "22.05.9",
                    "description": "SLURM version to install. Currently supported: only [20.11.9 | 22.05.3] with cyclecloud_slurm_version==2.7.x and [22.05.9 | 23.02.5] with cyclecloud_slurm_version==3.0.x."
                },
                "cyclecloud_slurm_version": {
                    "type": "string",
                    "enum": ["2.7.0", "2.7.1", "2.7.2", "3.0.4"],
                    "default": "3.0.4",
                    "description": "CycleCloud for SLURM project version as defined in https://github.com/Azure/cyclecloud-slurm/releases. Currently supported: 2.7.0-2.7.2, 3.0.4."
                }
            },
            "required": [
                "accounting_enabled"
            ],
            "title": "Slurm"
        },
        "Enroot": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "enroot_version": {
                    "description": "Enroot version",
                    "type": "string"
                }
            },
            "title": "Enroot"
        },
        "Tags": {
            "type": "object",
            "additionalProperties": true,
            "properties": {
            },
            "required": [
            ],
            "title": "Tags"
        },
        "Usergroup": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string"
                },
                "gid": {
                    "type": "integer"
                },
                "description": {
                    "type": "string"
                }
            },
            "required": [
                "gid",
                "name"
            ],
            "title": "Usergroup"
        },
        "User": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "type": "string",
                    "maxLength": 20
                },
                "shell": {
                    "description": "Defaults to /bin/bash",
                    "type": "string"
                },
                "home": {
                    "description": "Defaults to /<homedir_mountpoint>/<name>",
                    "type": "string"
                },
                "uid": {
                    "type": "integer"
                },
                "groups": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                }
            },
            "required": [
                "name",
                "uid"
            ],
            "title": "User"
        },
        "HyperV": {
            "type": "string",
            "enum": [
                "V2",
                "V1"
            ],
            "title": "HyperV"
        },
        "OSType": {
            "type": "string",
            "enum": [
                "Linux",
                "Windows"
            ],
            "title": "OSType"
        },
        "Project": {
            "type": "string",
            "enum": [
                "azhop",
                "azhpc"
            ],
            "title": "Project"
        }
    }
}
